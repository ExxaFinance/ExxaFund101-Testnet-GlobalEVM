{
	"id": "1588c0d23b635800f636939d82677625",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"ExxaAdmin.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.29;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./ExxaBaseStorage.sol\";\r\n\r\n/**\r\n * @title ExxaAdmin\r\n * Handles global fund settings such as pausing, oracle setup, fees, and backend operators.\r\n * This is meant to be inherited or used as a base admin control layer.\r\n */\r\ncontract ExxaAdmin is Ownable, ExxaBaseStorage {\r\n    bool public depositsPaused = false;\r\n    address public oracle;\r\n    address public backendOperator;\r\n    uint256 public depositFeeBps;\r\n\r\n    event DepositsPaused(bool paused);\r\n    event OracleUpdated(address newOracle);\r\n    event BackendOperatorUpdated(address newOperator);\r\n    event DepositFeeUpdated(uint256 newFeeBps);\r\n\r\n    constructor(address initialOwner, address _usdt) Ownable(initialOwner) ExxaBaseStorage(_usdt) {}\r\n\r\n    // Allows admin to pause or unpause deposits to the fund\r\n    function setDepositPaused(bool paused) external onlyOwner {\r\n        depositsPaused = paused;\r\n        emit DepositsPaused(paused);\r\n    }\r\n\r\n    // Set a new oracle address (e.g., Chainlink aggregator)\r\n    function setOracle(address _oracle) external onlyOwner {\r\n        require(_oracle != address(0), \"Invalid oracle address\");\r\n        oracle = _oracle;\r\n        emit OracleUpdated(_oracle);\r\n    }\r\n\r\n    // Appoint or change backend automation operator\r\n    function setBackendOperator(address _operator) external onlyOwner {\r\n        backendOperator = _operator;\r\n        emit BackendOperatorUpdated(_operator);\r\n    }\r\n\r\n    // Define deposit fee (in basis points, max 5%)\r\n    function setDepositFee(uint256 feeBps) external onlyOwner {\r\n        require(feeBps <= 500, \"Fee too high\");\r\n        depositFeeBps = feeBps;\r\n        emit DepositFeeUpdated(feeBps);\r\n    }\r\n\r\n    // Utility function to check if a caller is owner or operator\r\n    function isAuthorizedOperator(address caller) public view returns (bool) {\r\n        return (caller == owner() || caller == backendOperator);\r\n    }\r\n}\r\n"
			},
			"ExxaBaseStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.29;\r\n\r\nabstract contract ExxaBaseStorage {\r\n    // Counter to assign a unique ID to each user investment\r\n    uint256 internal globalInvestmentId;\r\n\r\n    // USDT token address - used for all deposits and withdrawals\r\n    address public usdt;\r\n\r\n    // Address of the fund owner or admin who can update critical parameters\r\n    address public owner_;\r\n\r\n    // Latest recorded index value for the fund (used to calculate performance)\r\n    uint256 public currentIndexPrice;\r\n\r\n    // A single investment made by a user\r\n    struct Investment {\r\n        uint256 id;              // Unique ID for tracking\r\n        address user;            // Address of the user\r\n        uint256 amountUSD;       // Amount deposited in USDT\r\n        uint256 indexAtEntry;    // Index value at the time of entry\r\n        uint256 timestamp;       // When the deposit was made\r\n        bool withdrawn;          // True if user has withdrawn this investment\r\n    }\r\n\r\n    // Mapping of all investments per user\r\n    mapping(address => Investment[]) internal userInvestments;\r\n\r\n    // Optional: global investment tracking by ID (if we need to reference it later)\r\n    mapping(uint256 => Investment) internal investmentsById;\r\n\r\n    // Modifier to ensure only the fund owner can call certain functions\r\n   // modifier onlyOwner_() {\r\n     //   require(msg.sender == owner_, \"Not authorized\");\r\n     //   _;\r\n   // }\r\n\r\n    // Constructor sets the USDT token and assigns ownership to deployer\r\n    constructor(address _usdt) {\r\n        require(_usdt != address(0), \"Invalid USDT address\");\r\n        usdt = _usdt;\r\n        owner_ = msg.sender;\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe7026fe6394bd39f8bd184b928859c06793f8b31532ab3301d297998c4d052e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e249367ad0e341fa395b39e2e6ba57194fb27611f7a7dc16c67c447cdf6774c\",\"dweb:/ipfs/QmU9iz1TysJTpmfJrRQu2vFjFBKxeBC9ZmmDnaEhVpzEo9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExxaAdmin.sol": {
				"ExxaAdmin": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "BackendOperatorUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFeeBps",
									"type": "uint256"
								}
							],
							"name": "DepositFeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "DepositsPaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newOracle",
									"type": "address"
								}
							],
							"name": "OracleUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "backendOperator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentIndexPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFeeBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositsPaused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "caller",
									"type": "address"
								}
							],
							"name": "isAuthorizedOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner_",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "setBackendOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "feeBps",
									"type": "uint256"
								}
							],
							"name": "setDepositFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "paused",
									"type": "bool"
								}
							],
							"name": "setDepositPaused",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								}
							],
							"name": "setOracle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "ExxaAdmin Handles global fund settings such as pausing, oracle setup, fees, and backend operators. This is meant to be inherited or used as a base admin control layer.",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ExxaAdmin.sol\":347:2003  contract ExxaAdmin is Ownable, ExxaBaseStorage {... */\n  mstore(0x40, 0x80)\n    /* \"ExxaAdmin.sol\":430:435  false */\n  0x00\n    /* \"ExxaAdmin.sol\":401:435  bool public depositsPaused = false */\n  0x07\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ExxaAdmin.sol\":736:832  constructor(address initialOwner, address _usdt) Ownable(initialOwner) ExxaBaseStorage(_usdt) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ExxaAdmin.sol\":823:828  _usdt */\n  dup1\n    /* \"ExxaAdmin.sol\":793:805  initialOwner */\n  dup3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"ExxaBaseStorage.sol\":1589:1590  0 */\n  0x00\n    /* \"ExxaBaseStorage.sol\":1572:1591  _usdt != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ExxaBaseStorage.sol\":1572:1577  _usdt */\n  dup2\n    /* \"ExxaBaseStorage.sol\":1572:1591  _usdt != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ExxaBaseStorage.sol\":1564:1616  require(_usdt != address(0), \"Invalid USDT address\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"ExxaBaseStorage.sol\":1634:1639  _usdt */\n  dup1\n    /* \"ExxaBaseStorage.sol\":1627:1631  usdt */\n  0x02\n  0x00\n    /* \"ExxaBaseStorage.sol\":1627:1639  usdt = _usdt */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ExxaBaseStorage.sol\":1659:1669  msg.sender */\n  caller\n    /* \"ExxaBaseStorage.sol\":1650:1656  owner_ */\n  0x03\n  0x00\n    /* \"ExxaBaseStorage.sol\":1650:1669  owner_ = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ExxaBaseStorage.sol\":1526:1677  constructor(address _usdt) {... */\n  pop\n    /* \"ExxaAdmin.sol\":736:832  constructor(address initialOwner, address _usdt) Ownable(initialOwner) ExxaBaseStorage(_usdt) {} */\n  pop\n  pop\n    /* \"ExxaAdmin.sol\":347:2003  contract ExxaAdmin is Ownable, ExxaBaseStorage {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  0x00\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_45\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":949:1068   */\ntag_44:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_46\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_26\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_47\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_26\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_27:\n    /* \"#utility.yul\":1445:1469   */\n  tag_49\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_10:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_51\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_27\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1710:1879   */\ntag_28:\n    /* \"#utility.yul\":1794:1805   */\n  0x00\n    /* \"#utility.yul\":1828:1834   */\n  dup3\n    /* \"#utility.yul\":1823:1826   */\n  dup3\n    /* \"#utility.yul\":1816:1835   */\n  mstore\n    /* \"#utility.yul\":1868:1872   */\n  0x20\n    /* \"#utility.yul\":1863:1866   */\n  dup3\n    /* \"#utility.yul\":1859:1873   */\n  add\n    /* \"#utility.yul\":1844:1873   */\n  swap1\n  pop\n    /* \"#utility.yul\":1710:1879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1885:2055   */\ntag_29:\n    /* \"#utility.yul\":2025:2047   */\n  0x496e76616c696420555344542061646472657373000000000000000000000000\n    /* \"#utility.yul\":2021:2022   */\n  0x00\n    /* \"#utility.yul\":2013:2019   */\n  dup3\n    /* \"#utility.yul\":2009:2023   */\n  add\n    /* \"#utility.yul\":2002:2048   */\n  mstore\n    /* \"#utility.yul\":1885:2055   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2061:2427   */\ntag_30:\n    /* \"#utility.yul\":2203:2206   */\n  0x00\n    /* \"#utility.yul\":2224:2291   */\n  tag_55\n    /* \"#utility.yul\":2288:2290   */\n  0x14\n    /* \"#utility.yul\":2283:2286   */\n  dup4\n    /* \"#utility.yul\":2224:2291   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2217:2291   */\n  swap2\n  pop\n    /* \"#utility.yul\":2300:2393   */\n  tag_56\n    /* \"#utility.yul\":2389:2392   */\n  dup3\n    /* \"#utility.yul\":2300:2393   */\n  tag_29\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2418:2420   */\n  0x20\n    /* \"#utility.yul\":2413:2416   */\n  dup3\n    /* \"#utility.yul\":2409:2421   */\n  add\n    /* \"#utility.yul\":2402:2421   */\n  swap1\n  pop\n    /* \"#utility.yul\":2061:2427   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2433:2852   */\ntag_16:\n    /* \"#utility.yul\":2599:2603   */\n  0x00\n    /* \"#utility.yul\":2637:2639   */\n  0x20\n    /* \"#utility.yul\":2626:2635   */\n  dup3\n    /* \"#utility.yul\":2622:2640   */\n  add\n    /* \"#utility.yul\":2614:2640   */\n  swap1\n  pop\n    /* \"#utility.yul\":2686:2695   */\n  dup2\n    /* \"#utility.yul\":2680:2684   */\n  dup2\n    /* \"#utility.yul\":2676:2696   */\n  sub\n    /* \"#utility.yul\":2672:2673   */\n  0x00\n    /* \"#utility.yul\":2661:2670   */\n  dup4\n    /* \"#utility.yul\":2657:2674   */\n  add\n    /* \"#utility.yul\":2650:2697   */\n  mstore\n    /* \"#utility.yul\":2714:2845   */\n  tag_58\n    /* \"#utility.yul\":2840:2844   */\n  dup2\n    /* \"#utility.yul\":2714:2845   */\n  tag_30\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2706:2845   */\n  swap1\n  pop\n    /* \"#utility.yul\":2433:2852   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"ExxaAdmin.sol\":347:2003  contract ExxaAdmin is Ownable, ExxaBaseStorage {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ExxaAdmin.sol\":347:2003  contract ExxaAdmin is Ownable, ExxaBaseStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7dc0d1d0\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xab879827\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xab879827\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc7b6084c\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe7663079\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x82d52c1e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8e6b409e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x543f66a4\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x543f66a4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x60da3e83\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7adbf973\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x02262ced\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x490ae210\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"ExxaAdmin.sol\":1367:1528  function setBackendOperator(address _operator) external onlyOwner {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"ExxaBaseStorage.sol\":275:294  address public usdt */\n    tag_4:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ExxaAdmin.sol\":1589:1778  function setDepositFee(uint256 feeBps) external onlyOwner {... */\n    tag_5:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"ExxaAdmin.sol\":902:1040  function setDepositPaused(bool paused) external onlyOwner {... */\n    tag_6:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"ExxaAdmin.sol\":401:435  bool public depositsPaused = false */\n    tag_7:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"ExxaAdmin.sol\":1110:1305  function setOracle(address _oracle) external onlyOwner {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"ExxaAdmin.sol\":442:463  address public oracle */\n    tag_10:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ExxaAdmin.sol\":1853:2000  function isAuthorizedOperator(address caller) public view returns (bool) {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ExxaBaseStorage.sol\":492:524  uint256 public currentIndexPrice */\n    tag_13:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ExxaAdmin.sol\":507:535  uint256 public depositFeeBps */\n    tag_14:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ExxaAdmin.sol\":470:500  address public backendOperator */\n    tag_15:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ExxaBaseStorage.sol\":381:402  address public owner_ */\n    tag_16:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"ExxaAdmin.sol\":1367:1528  function setBackendOperator(address _operator) external onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"ExxaAdmin.sol\":1462:1471  _operator */\n      dup1\n        /* \"ExxaAdmin.sol\":1444:1459  backendOperator */\n      0x08\n      0x00\n        /* \"ExxaAdmin.sol\":1444:1471  backendOperator = _operator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ExxaAdmin.sol\":1487:1520  BackendOperatorUpdated(_operator) */\n      0x8f044878f4d84ccc4d80555f24f9428c1d9297c48b7c7a17e6a50263be17ef54\n        /* \"ExxaAdmin.sol\":1510:1519  _operator */\n      dup2\n        /* \"ExxaAdmin.sol\":1487:1520  BackendOperatorUpdated(_operator) */\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ExxaAdmin.sol\":1367:1528  function setBackendOperator(address _operator) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ExxaBaseStorage.sol\":275:294  address public usdt */\n    tag_26:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ExxaAdmin.sol\":1589:1778  function setDepositFee(uint256 feeBps) external onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_78\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_78:\n        /* \"ExxaAdmin.sol\":1676:1679  500 */\n      0x01f4\n        /* \"ExxaAdmin.sol\":1666:1672  feeBps */\n      dup2\n        /* \"ExxaAdmin.sol\":1666:1679  feeBps <= 500 */\n      gt\n      iszero\n        /* \"ExxaAdmin.sol\":1658:1696  require(feeBps <= 500, \"Fee too high\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"ExxaAdmin.sol\":1723:1729  feeBps */\n      dup1\n        /* \"ExxaAdmin.sol\":1707:1720  depositFeeBps */\n      0x09\n        /* \"ExxaAdmin.sol\":1707:1729  depositFeeBps = feeBps */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ExxaAdmin.sol\":1745:1770  DepositFeeUpdated(feeBps) */\n      0x206dd15151fcc83315419fbe53a71fcf9c09da803767d3dd05f7874e1b9bf645\n        /* \"ExxaAdmin.sol\":1763:1769  feeBps */\n      dup2\n        /* \"ExxaAdmin.sol\":1745:1770  DepositFeeUpdated(feeBps) */\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ExxaAdmin.sol\":1589:1778  function setDepositFee(uint256 feeBps) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ExxaAdmin.sol\":902:1040  function setDepositPaused(bool paused) external onlyOwner {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_85\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_85:\n        /* \"ExxaAdmin.sol\":988:994  paused */\n      dup1\n        /* \"ExxaAdmin.sol\":971:985  depositsPaused */\n      0x07\n      0x00\n        /* \"ExxaAdmin.sol\":971:994  depositsPaused = paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ExxaAdmin.sol\":1010:1032  DepositsPaused(paused) */\n      0x5ef34f53269a04b5b817e5be24a51ba6b477118b399ec9dd5b2baf5b299563dc\n        /* \"ExxaAdmin.sol\":1025:1031  paused */\n      dup2\n        /* \"ExxaAdmin.sol\":1010:1032  DepositsPaused(paused) */\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ExxaAdmin.sol\":902:1040  function setDepositPaused(bool paused) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ExxaAdmin.sol\":401:435  bool public depositsPaused = false */\n    tag_38:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ExxaAdmin.sol\":1110:1305  function setOracle(address _oracle) external onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_94:\n        /* \"ExxaAdmin.sol\":1203:1204  0 */\n      0x00\n        /* \"ExxaAdmin.sol\":1184:1205  _oracle != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ExxaAdmin.sol\":1184:1191  _oracle */\n      dup2\n        /* \"ExxaAdmin.sol\":1184:1205  _oracle != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ExxaAdmin.sol\":1176:1232  require(_oracle != address(0), \"Invalid oracle address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"ExxaAdmin.sol\":1252:1259  _oracle */\n      dup1\n        /* \"ExxaAdmin.sol\":1243:1249  oracle */\n      0x07\n      0x01\n        /* \"ExxaAdmin.sol\":1243:1259  oracle = _oracle */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ExxaAdmin.sol\":1275:1297  OracleUpdated(_oracle) */\n      0x3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394\n        /* \"ExxaAdmin.sol\":1289:1296  _oracle */\n      dup2\n        /* \"ExxaAdmin.sol\":1275:1297  OracleUpdated(_oracle) */\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"ExxaAdmin.sol\":1110:1305  function setOracle(address _oracle) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"ExxaAdmin.sol\":442:463  address public oracle */\n    tag_47:\n      0x07\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ExxaAdmin.sol\":1853:2000  function isAuthorizedOperator(address caller) public view returns (bool) {... */\n    tag_51:\n        /* \"ExxaAdmin.sol\":1920:1924  bool */\n      0x00\n        /* \"ExxaAdmin.sol\":1955:1962  owner() */\n      tag_101\n        /* \"ExxaAdmin.sol\":1955:1960  owner */\n      tag_54\n        /* \"ExxaAdmin.sol\":1955:1962  owner() */\n      jump\t// in\n    tag_101:\n        /* \"ExxaAdmin.sol\":1945:1962  caller == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ExxaAdmin.sol\":1945:1951  caller */\n      dup3\n        /* \"ExxaAdmin.sol\":1945:1962  caller == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ExxaAdmin.sol\":1945:1991  caller == owner() || caller == backendOperator */\n      dup1\n      tag_102\n      jumpi\n      pop\n        /* \"ExxaAdmin.sol\":1976:1991  backendOperator */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ExxaAdmin.sol\":1966:1991  caller == backendOperator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ExxaAdmin.sol\":1966:1972  caller */\n      dup3\n        /* \"ExxaAdmin.sol\":1966:1991  caller == backendOperator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"ExxaAdmin.sol\":1945:1991  caller == owner() || caller == backendOperator */\n    tag_102:\n        /* \"ExxaAdmin.sol\":1937:1992  return (caller == owner() || caller == backendOperator) */\n      swap1\n      pop\n        /* \"ExxaAdmin.sol\":1853:2000  function isAuthorizedOperator(address caller) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ExxaBaseStorage.sol\":492:524  uint256 public currentIndexPrice */\n    tag_57:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"ExxaAdmin.sol\":507:535  uint256 public depositFeeBps */\n    tag_61:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"ExxaAdmin.sol\":470:500  address public backendOperator */\n    tag_64:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"ExxaBaseStorage.sol\":381:402  address public owner_ */\n    tag_67:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_120:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_122:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_123:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_146\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_122\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_124:\n        /* \"#utility.yul\":641:665   */\n      tag_148\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_123\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_149:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_125:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_151\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_124\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_23:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_154\n      tag_120\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":917:1036   */\n    tag_153:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_155\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_125\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_126:\n        /* \"#utility.yul\":1263:1287   */\n      tag_157\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_123\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_28:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_159\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_126\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1605   */\n    tag_127:\n        /* \"#utility.yul\":1565:1572   */\n      0x00\n        /* \"#utility.yul\":1594:1599   */\n      dup2\n        /* \"#utility.yul\":1583:1599   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_128:\n        /* \"#utility.yul\":1684:1708   */\n      tag_162\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_127\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_163:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_129:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_165\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_128\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_31:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_168\n      tag_120\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1960:2079   */\n    tag_167:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_169\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_129\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2309   */\n    tag_130:\n        /* \"#utility.yul\":2253:2260   */\n      0x00\n        /* \"#utility.yul\":2296:2301   */\n      dup2\n        /* \"#utility.yul\":2289:2302   */\n      iszero\n        /* \"#utility.yul\":2282:2303   */\n      iszero\n        /* \"#utility.yul\":2271:2303   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2431   */\n    tag_131:\n        /* \"#utility.yul\":2385:2406   */\n      tag_172\n        /* \"#utility.yul\":2400:2405   */\n      dup2\n        /* \"#utility.yul\":2385:2406   */\n      tag_130\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2378:2383   */\n      dup2\n        /* \"#utility.yul\":2375:2407   */\n      eq\n        /* \"#utility.yul\":2365:2425   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":2421:2422   */\n      0x00\n        /* \"#utility.yul\":2418:2419   */\n      0x00\n        /* \"#utility.yul\":2411:2423   */\n      revert\n        /* \"#utility.yul\":2365:2425   */\n    tag_173:\n        /* \"#utility.yul\":2315:2431   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2437:2570   */\n    tag_132:\n        /* \"#utility.yul\":2480:2485   */\n      0x00\n        /* \"#utility.yul\":2518:2524   */\n      dup2\n        /* \"#utility.yul\":2505:2525   */\n      calldataload\n        /* \"#utility.yul\":2496:2525   */\n      swap1\n      pop\n        /* \"#utility.yul\":2534:2564   */\n      tag_175\n        /* \"#utility.yul\":2558:2563   */\n      dup2\n        /* \"#utility.yul\":2534:2564   */\n      tag_131\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2437:2570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2576:2899   */\n    tag_35:\n        /* \"#utility.yul\":2632:2638   */\n      0x00\n        /* \"#utility.yul\":2681:2683   */\n      0x20\n        /* \"#utility.yul\":2669:2678   */\n      dup3\n        /* \"#utility.yul\":2660:2667   */\n      dup5\n        /* \"#utility.yul\":2656:2679   */\n      sub\n        /* \"#utility.yul\":2652:2684   */\n      slt\n        /* \"#utility.yul\":2649:2768   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":2687:2766   */\n      tag_178\n      tag_120\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2649:2768   */\n    tag_177:\n        /* \"#utility.yul\":2807:2808   */\n      0x00\n        /* \"#utility.yul\":2832:2882   */\n      tag_179\n        /* \"#utility.yul\":2874:2881   */\n      dup5\n        /* \"#utility.yul\":2865:2871   */\n      dup3\n        /* \"#utility.yul\":2854:2863   */\n      dup6\n        /* \"#utility.yul\":2850:2872   */\n      add\n        /* \"#utility.yul\":2832:2882   */\n      tag_132\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2822:2882   */\n      swap2\n      pop\n        /* \"#utility.yul\":2778:2892   */\n      pop\n        /* \"#utility.yul\":2576:2899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2905:3014   */\n    tag_133:\n        /* \"#utility.yul\":2986:3007   */\n      tag_181\n        /* \"#utility.yul\":3001:3006   */\n      dup2\n        /* \"#utility.yul\":2986:3007   */\n      tag_130\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2981:2984   */\n      dup3\n        /* \"#utility.yul\":2974:3008   */\n      mstore\n        /* \"#utility.yul\":2905:3014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3020:3230   */\n    tag_40:\n        /* \"#utility.yul\":3107:3111   */\n      0x00\n        /* \"#utility.yul\":3145:3147   */\n      0x20\n        /* \"#utility.yul\":3134:3143   */\n      dup3\n        /* \"#utility.yul\":3130:3148   */\n      add\n        /* \"#utility.yul\":3122:3148   */\n      swap1\n      pop\n        /* \"#utility.yul\":3158:3223   */\n      tag_183\n        /* \"#utility.yul\":3220:3221   */\n      0x00\n        /* \"#utility.yul\":3209:3218   */\n      dup4\n        /* \"#utility.yul\":3205:3222   */\n      add\n        /* \"#utility.yul\":3196:3202   */\n      dup5\n        /* \"#utility.yul\":3158:3223   */\n      tag_133\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":3020:3230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3236:3354   */\n    tag_134:\n        /* \"#utility.yul\":3323:3347   */\n      tag_185\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3323:3347   */\n      tag_127\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3318:3321   */\n      dup3\n        /* \"#utility.yul\":3311:3348   */\n      mstore\n        /* \"#utility.yul\":3236:3354   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3582   */\n    tag_59:\n        /* \"#utility.yul\":3453:3457   */\n      0x00\n        /* \"#utility.yul\":3491:3493   */\n      0x20\n        /* \"#utility.yul\":3480:3489   */\n      dup3\n        /* \"#utility.yul\":3476:3494   */\n      add\n        /* \"#utility.yul\":3468:3494   */\n      swap1\n      pop\n        /* \"#utility.yul\":3504:3575   */\n      tag_187\n        /* \"#utility.yul\":3572:3573   */\n      0x00\n        /* \"#utility.yul\":3561:3570   */\n      dup4\n        /* \"#utility.yul\":3557:3574   */\n      add\n        /* \"#utility.yul\":3548:3554   */\n      dup5\n        /* \"#utility.yul\":3504:3575   */\n      tag_134\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3360:3582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3588:3757   */\n    tag_135:\n        /* \"#utility.yul\":3672:3683   */\n      0x00\n        /* \"#utility.yul\":3706:3712   */\n      dup3\n        /* \"#utility.yul\":3701:3704   */\n      dup3\n        /* \"#utility.yul\":3694:3713   */\n      mstore\n        /* \"#utility.yul\":3746:3750   */\n      0x20\n        /* \"#utility.yul\":3741:3744   */\n      dup3\n        /* \"#utility.yul\":3737:3751   */\n      add\n        /* \"#utility.yul\":3722:3751   */\n      swap1\n      pop\n        /* \"#utility.yul\":3588:3757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3763:3925   */\n    tag_136:\n        /* \"#utility.yul\":3903:3917   */\n      0x46656520746f6f20686967680000000000000000000000000000000000000000\n        /* \"#utility.yul\":3899:3900   */\n      0x00\n        /* \"#utility.yul\":3891:3897   */\n      dup3\n        /* \"#utility.yul\":3887:3901   */\n      add\n        /* \"#utility.yul\":3880:3918   */\n      mstore\n        /* \"#utility.yul\":3763:3925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3931:4297   */\n    tag_137:\n        /* \"#utility.yul\":4073:4076   */\n      0x00\n        /* \"#utility.yul\":4094:4161   */\n      tag_191\n        /* \"#utility.yul\":4158:4160   */\n      0x0c\n        /* \"#utility.yul\":4153:4156   */\n      dup4\n        /* \"#utility.yul\":4094:4161   */\n      tag_135\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4087:4161   */\n      swap2\n      pop\n        /* \"#utility.yul\":4170:4263   */\n      tag_192\n        /* \"#utility.yul\":4259:4262   */\n      dup3\n        /* \"#utility.yul\":4170:4263   */\n      tag_136\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"#utility.yul\":4283:4286   */\n      dup3\n        /* \"#utility.yul\":4279:4291   */\n      add\n        /* \"#utility.yul\":4272:4291   */\n      swap1\n      pop\n        /* \"#utility.yul\":3931:4297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4722   */\n    tag_82:\n        /* \"#utility.yul\":4469:4473   */\n      0x00\n        /* \"#utility.yul\":4507:4509   */\n      0x20\n        /* \"#utility.yul\":4496:4505   */\n      dup3\n        /* \"#utility.yul\":4492:4510   */\n      add\n        /* \"#utility.yul\":4484:4510   */\n      swap1\n      pop\n        /* \"#utility.yul\":4556:4565   */\n      dup2\n        /* \"#utility.yul\":4550:4554   */\n      dup2\n        /* \"#utility.yul\":4546:4566   */\n      sub\n        /* \"#utility.yul\":4542:4543   */\n      0x00\n        /* \"#utility.yul\":4531:4540   */\n      dup4\n        /* \"#utility.yul\":4527:4544   */\n      add\n        /* \"#utility.yul\":4520:4567   */\n      mstore\n        /* \"#utility.yul\":4584:4715   */\n      tag_194\n        /* \"#utility.yul\":4710:4714   */\n      dup2\n        /* \"#utility.yul\":4584:4715   */\n      tag_137\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4576:4715   */\n      swap1\n      pop\n        /* \"#utility.yul\":4303:4722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4728:4900   */\n    tag_138:\n        /* \"#utility.yul\":4868:4892   */\n      0x496e76616c6964206f7261636c65206164647265737300000000000000000000\n        /* \"#utility.yul\":4864:4865   */\n      0x00\n        /* \"#utility.yul\":4856:4862   */\n      dup3\n        /* \"#utility.yul\":4852:4866   */\n      add\n        /* \"#utility.yul\":4845:4893   */\n      mstore\n        /* \"#utility.yul\":4728:4900   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4906:5272   */\n    tag_139:\n        /* \"#utility.yul\":5048:5051   */\n      0x00\n        /* \"#utility.yul\":5069:5136   */\n      tag_197\n        /* \"#utility.yul\":5133:5135   */\n      0x16\n        /* \"#utility.yul\":5128:5131   */\n      dup4\n        /* \"#utility.yul\":5069:5136   */\n      tag_135\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5062:5136   */\n      swap2\n      pop\n        /* \"#utility.yul\":5145:5238   */\n      tag_198\n        /* \"#utility.yul\":5234:5237   */\n      dup3\n        /* \"#utility.yul\":5145:5238   */\n      tag_138\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":5263:5265   */\n      0x20\n        /* \"#utility.yul\":5258:5261   */\n      dup3\n        /* \"#utility.yul\":5254:5266   */\n      add\n        /* \"#utility.yul\":5247:5266   */\n      swap1\n      pop\n        /* \"#utility.yul\":4906:5272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5278:5697   */\n    tag_98:\n        /* \"#utility.yul\":5444:5448   */\n      0x00\n        /* \"#utility.yul\":5482:5484   */\n      0x20\n        /* \"#utility.yul\":5471:5480   */\n      dup3\n        /* \"#utility.yul\":5467:5485   */\n      add\n        /* \"#utility.yul\":5459:5485   */\n      swap1\n      pop\n        /* \"#utility.yul\":5531:5540   */\n      dup2\n        /* \"#utility.yul\":5525:5529   */\n      dup2\n        /* \"#utility.yul\":5521:5541   */\n      sub\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5506:5515   */\n      dup4\n        /* \"#utility.yul\":5502:5519   */\n      add\n        /* \"#utility.yul\":5495:5542   */\n      mstore\n        /* \"#utility.yul\":5559:5690   */\n      tag_200\n        /* \"#utility.yul\":5685:5689   */\n      dup2\n        /* \"#utility.yul\":5559:5690   */\n      tag_139\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5551:5690   */\n      swap1\n      pop\n        /* \"#utility.yul\":5278:5697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c82cd7e6ef20b470c762ca25acc01f12a4e3894bb7cf8804185d165a38d9781864736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_384": {
									"entryPoint": null,
									"id": 384,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 450,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f": {
									"entryPoint": 855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2855:4",
										"nodeType": "YulBlock",
										"src": "0:2855:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "939:413:4",
													"nodeType": "YulBlock",
													"src": "939:413:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:4",
																"nodeType": "YulBlock",
																"src": "985:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:4"
																			},
																			"nativeSrc": "987:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:4"
																		},
																		"nativeSrc": "987:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:4"
																		},
																		"nativeSrc": "956:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:4",
																		"nodeType": "YulLiteral",
																		"src": "981:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:4"
																},
																"nativeSrc": "952:32:4",
																"nodeType": "YulFunctionCall",
																"src": "952:32:4"
															},
															"nativeSrc": "949:119:4",
															"nodeType": "YulIf",
															"src": "949:119:4"
														},
														{
															"nativeSrc": "1078:128:4",
															"nodeType": "YulBlock",
															"src": "1078:128:4",
															"statements": [
																{
																	"nativeSrc": "1093:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:4"
																				},
																				"nativeSrc": "1164:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:4"
																		},
																		"nativeSrc": "1132:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:4",
															"nodeType": "YulBlock",
															"src": "1216:129:4",
															"statements": [
																{
																	"nativeSrc": "1231:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:4"
																				},
																				"nativeSrc": "1303:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:4"
																		},
																		"nativeSrc": "1271:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:4",
														"nodeType": "YulTypedName",
														"src": "901:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:4",
														"nodeType": "YulTypedName",
														"src": "912:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:4",
														"nodeType": "YulTypedName",
														"src": "924:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:4",
														"nodeType": "YulTypedName",
														"src": "932:6:4",
														"type": ""
													}
												],
												"src": "845:507:4"
											},
											{
												"body": {
													"nativeSrc": "1423:53:4",
													"nodeType": "YulBlock",
													"src": "1423:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:4"
																		},
																		"nativeSrc": "1445:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:4"
																},
																"nativeSrc": "1433:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:4"
															},
															"nativeSrc": "1433:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:4",
														"nodeType": "YulTypedName",
														"src": "1411:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:4",
														"nodeType": "YulTypedName",
														"src": "1418:3:4",
														"type": ""
													}
												],
												"src": "1358:118:4"
											},
											{
												"body": {
													"nativeSrc": "1580:124:4",
													"nodeType": "YulBlock",
													"src": "1580:124:4",
													"statements": [
														{
															"nativeSrc": "1590:26:4",
															"nodeType": "YulAssignment",
															"src": "1590:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:4"
																},
																"nativeSrc": "1598:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:4"
																		},
																		"nativeSrc": "1679:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:4"
																},
																"nativeSrc": "1626:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:4"
															},
															"nativeSrc": "1626:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:4",
														"nodeType": "YulTypedName",
														"src": "1552:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:4",
														"nodeType": "YulTypedName",
														"src": "1564:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:4",
														"nodeType": "YulTypedName",
														"src": "1575:4:4",
														"type": ""
													}
												],
												"src": "1482:222:4"
											},
											{
												"body": {
													"nativeSrc": "1806:73:4",
													"nodeType": "YulBlock",
													"src": "1806:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1823:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1823:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1828:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1828:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1816:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1816:6:4"
																},
																"nativeSrc": "1816:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1816:19:4"
															},
															"nativeSrc": "1816:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "1816:19:4"
														},
														{
															"nativeSrc": "1844:29:4",
															"nodeType": "YulAssignment",
															"src": "1844:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1863:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1863:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1868:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1868:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1859:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1859:3:4"
																},
																"nativeSrc": "1859:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1859:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1844:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "1844:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1710:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1778:3:4",
														"nodeType": "YulTypedName",
														"src": "1778:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1783:6:4",
														"nodeType": "YulTypedName",
														"src": "1783:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1794:11:4",
														"nodeType": "YulTypedName",
														"src": "1794:11:4",
														"type": ""
													}
												],
												"src": "1710:169:4"
											},
											{
												"body": {
													"nativeSrc": "1991:64:4",
													"nodeType": "YulBlock",
													"src": "1991:64:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2013:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2013:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2021:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2021:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2009:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2009:3:4"
																		},
																		"nativeSrc": "2009:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2009:14:4"
																	},
																	{
																		"hexValue": "496e76616c696420555344542061646472657373",
																		"kind": "string",
																		"nativeSrc": "2025:22:4",
																		"nodeType": "YulLiteral",
																		"src": "2025:22:4",
																		"type": "",
																		"value": "Invalid USDT address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2002:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2002:6:4"
																},
																"nativeSrc": "2002:46:4",
																"nodeType": "YulFunctionCall",
																"src": "2002:46:4"
															},
															"nativeSrc": "2002:46:4",
															"nodeType": "YulExpressionStatement",
															"src": "2002:46:4"
														}
													]
												},
												"name": "store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
												"nativeSrc": "1885:170:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1983:6:4",
														"nodeType": "YulTypedName",
														"src": "1983:6:4",
														"type": ""
													}
												],
												"src": "1885:170:4"
											},
											{
												"body": {
													"nativeSrc": "2207:220:4",
													"nodeType": "YulBlock",
													"src": "2207:220:4",
													"statements": [
														{
															"nativeSrc": "2217:74:4",
															"nodeType": "YulAssignment",
															"src": "2217:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2283:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2283:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2288:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2288:2:4",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2224:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "2224:58:4"
																},
																"nativeSrc": "2224:67:4",
																"nodeType": "YulFunctionCall",
																"src": "2224:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2217:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2389:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2389:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
																	"nativeSrc": "2300:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "2300:88:4"
																},
																"nativeSrc": "2300:93:4",
																"nodeType": "YulFunctionCall",
																"src": "2300:93:4"
															},
															"nativeSrc": "2300:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "2300:93:4"
														},
														{
															"nativeSrc": "2402:19:4",
															"nodeType": "YulAssignment",
															"src": "2402:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2413:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2413:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2409:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:3:4"
																},
																"nativeSrc": "2409:12:4",
																"nodeType": "YulFunctionCall",
																"src": "2409:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2402:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2402:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2061:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2195:3:4",
														"nodeType": "YulTypedName",
														"src": "2195:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2203:3:4",
														"nodeType": "YulTypedName",
														"src": "2203:3:4",
														"type": ""
													}
												],
												"src": "2061:366:4"
											},
											{
												"body": {
													"nativeSrc": "2604:248:4",
													"nodeType": "YulBlock",
													"src": "2604:248:4",
													"statements": [
														{
															"nativeSrc": "2614:26:4",
															"nodeType": "YulAssignment",
															"src": "2614:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2626:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2626:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2637:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2637:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2622:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2622:3:4"
																},
																"nativeSrc": "2622:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2622:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2614:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2614:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2661:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2661:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2672:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2672:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2657:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:4"
																		},
																		"nativeSrc": "2657:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2680:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2680:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2686:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2676:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2676:3:4"
																		},
																		"nativeSrc": "2676:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2676:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2650:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:4"
																},
																"nativeSrc": "2650:47:4",
																"nodeType": "YulFunctionCall",
																"src": "2650:47:4"
															},
															"nativeSrc": "2650:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "2650:47:4"
														},
														{
															"nativeSrc": "2706:139:4",
															"nodeType": "YulAssignment",
															"src": "2706:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2840:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2840:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2714:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "2714:124:4"
																},
																"nativeSrc": "2714:131:4",
																"nodeType": "YulFunctionCall",
																"src": "2714:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2706:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2706:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2433:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:4",
														"nodeType": "YulTypedName",
														"src": "2584:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2599:4:4",
														"nodeType": "YulTypedName",
														"src": "2599:4:4",
														"type": ""
													}
												],
												"src": "2433:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid USDT address\")\n\n    }\n\n    function abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f60075f6101000a81548160ff021916908315150217905550348015610028575f5ffd5b50604051610eff380380610eff833981810160405281019061004a91906102e1565b80825f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100bc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100b3919061032e565b60405180910390fd5b6100cb816101c260201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361013a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610131906103a1565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503360035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506103bf565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102b082610287565b9050919050565b6102c0816102a6565b81146102ca575f5ffd5b50565b5f815190506102db816102b7565b92915050565b5f5f604083850312156102f7576102f6610283565b5b5f610304858286016102cd565b9250506020610315858286016102cd565b9150509250929050565b610328816102a6565b82525050565b5f6020820190506103415f83018461031f565b92915050565b5f82825260208201905092915050565b7f496e76616c6964205553445420616464726573730000000000000000000000005f82015250565b5f61038b601483610347565b915061039682610357565b602082019050919050565b5f6020820190508181035f8301526103b88161037f565b9050919050565b610b33806103cc5f395ff3fe608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c80637dc0d1d011610095578063ab87982711610064578063ab87982714610237578063c7b6084c14610255578063e766307914610273578063f2fde38b14610291576100f3565b80637dc0d1d0146101ad57806382d52c1e146101cb5780638da5cb5b146101fb5780638e6b409e14610219576100f3565b8063543f66a4116100d1578063543f66a41461014d57806360da3e8314610169578063715018a6146101875780637adbf97314610191576100f3565b806302262ced146100f75780632f48ab7d14610113578063490ae21014610131575b5f5ffd5b610111600480360381019061010c91906108bc565b6102ad565b005b61011b61032f565b60405161012891906108f6565b60405180910390f35b61014b60048036038101906101469190610942565b610354565b005b610167600480360381019061016291906109a2565b6103e2565b005b61017161043d565b60405161017e91906109dc565b60405180910390f35b61018f61044f565b005b6101ab60048036038101906101a691906108bc565b610462565b005b6101b5610553565b6040516101c291906108f6565b60405180910390f35b6101e560048036038101906101e091906108bc565b610579565b6040516101f291906109dc565b60405180910390f35b61020361060e565b60405161021091906108f6565b60405180910390f35b610221610635565b60405161022e9190610a04565b60405180910390f35b61023f61063b565b60405161024c9190610a04565b60405180910390f35b61025d610641565b60405161026a91906108f6565b60405180910390f35b61027b610666565b60405161028891906108f6565b60405180910390f35b6102ab60048036038101906102a691906108bc565b61068b565b005b6102b561070f565b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8f044878f4d84ccc4d80555f24f9428c1d9297c48b7c7a17e6a50263be17ef548160405161032491906108f6565b60405180910390a150565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61035c61070f565b6101f48111156103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039890610a77565b60405180910390fd5b806009819055507f206dd15151fcc83315419fbe53a71fcf9c09da803767d3dd05f7874e1b9bf645816040516103d79190610a04565b60405180910390a150565b6103ea61070f565b8060075f6101000a81548160ff0219169083151502179055507f5ef34f53269a04b5b817e5be24a51ba6b477118b399ec9dd5b2baf5b299563dc8160405161043291906109dc565b60405180910390a150565b60075f9054906101000a900460ff1681565b61045761070f565b6104605f610796565b565b61046a61070f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf90610adf565b60405180910390fd5b80600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b81809403948160405161054891906108f6565b60405180910390a150565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f61058261060e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610607575060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b60095481565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61069361070f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610703575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106fa91906108f6565b60405180910390fd5b61070c81610796565b50565b610717610857565b73ffffffffffffffffffffffffffffffffffffffff1661073561060e565b73ffffffffffffffffffffffffffffffffffffffff161461079457610758610857565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161078b91906108f6565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61088b82610862565b9050919050565b61089b81610881565b81146108a5575f5ffd5b50565b5f813590506108b681610892565b92915050565b5f602082840312156108d1576108d061085e565b5b5f6108de848285016108a8565b91505092915050565b6108f081610881565b82525050565b5f6020820190506109095f8301846108e7565b92915050565b5f819050919050565b6109218161090f565b811461092b575f5ffd5b50565b5f8135905061093c81610918565b92915050565b5f602082840312156109575761095661085e565b5b5f6109648482850161092e565b91505092915050565b5f8115159050919050565b6109818161096d565b811461098b575f5ffd5b50565b5f8135905061099c81610978565b92915050565b5f602082840312156109b7576109b661085e565b5b5f6109c48482850161098e565b91505092915050565b6109d68161096d565b82525050565b5f6020820190506109ef5f8301846109cd565b92915050565b6109fe8161090f565b82525050565b5f602082019050610a175f8301846109f5565b92915050565b5f82825260208201905092915050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f610a61600c83610a1d565b9150610a6c82610a2d565b602082019050919050565b5f6020820190508181035f830152610a8e81610a55565b9050919050565b7f496e76616c6964206f7261636c652061646472657373000000000000000000005f82015250565b5f610ac9601683610a1d565b9150610ad482610a95565b602082019050919050565b5f6020820190508181035f830152610af681610abd565b905091905056fea2646970667358221220c82cd7e6ef20b470c762ca25acc01f12a4e3894bb7cf8804185d165a38d9781864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xEFF CODESIZE SUB DUP1 PUSH2 0xEFF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x2E1 JUMP JUMPDEST DUP1 DUP3 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x32E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB DUP2 PUSH2 0x1C2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131 SWAP1 PUSH2 0x3A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x3BF JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2B0 DUP3 PUSH2 0x287 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2C0 DUP2 PUSH2 0x2A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2CA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DB DUP2 PUSH2 0x2B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F7 JUMPI PUSH2 0x2F6 PUSH2 0x283 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x304 DUP6 DUP3 DUP7 ADD PUSH2 0x2CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x315 DUP6 DUP3 DUP7 ADD PUSH2 0x2CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x328 DUP2 PUSH2 0x2A6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x341 PUSH0 DUP4 ADD DUP5 PUSH2 0x31F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420555344542061646472657373000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x38B PUSH1 0x14 DUP4 PUSH2 0x347 JUMP JUMPDEST SWAP2 POP PUSH2 0x396 DUP3 PUSH2 0x357 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3B8 DUP2 PUSH2 0x37F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB33 DUP1 PUSH2 0x3CC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC0D1D0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xAB879827 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAB879827 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xC7B6084C EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xE7663079 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x291 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x82D52C1E EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x8E6B409E EQ PUSH2 0x219 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x543F66A4 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x543F66A4 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x60DA3E83 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x191 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x2262CED EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x490AE210 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x44F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH2 0x70F JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x8F044878F4D84CCC4D80555F24F9428C1D9297C48B7C7A17E6A50263BE17EF54 DUP2 PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x35C PUSH2 0x70F JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x206DD15151FCC83315419FBE53A71FCF9C09DA803767D3DD05F7874E1B9BF645 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0x70F JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5EF34F53269A04B5B817E5BE24A51BA6B477118B399EC9DD5B2BAF5B299563DC DUP2 PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x457 PUSH2 0x70F JUMP JUMPDEST PUSH2 0x460 PUSH0 PUSH2 0x796 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46A PUSH2 0x70F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 DUP2 PUSH1 0x40 MLOAD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x582 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x607 JUMPI POP PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x693 PUSH2 0x70F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP2 PUSH2 0x796 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x717 PUSH2 0x857 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x735 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x794 JUMPI PUSH2 0x758 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x88B DUP3 PUSH2 0x862 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89B DUP2 PUSH2 0x881 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8B6 DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D1 JUMPI PUSH2 0x8D0 PUSH2 0x85E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8DE DUP5 DUP3 DUP6 ADD PUSH2 0x8A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH2 0x881 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x909 PUSH0 DUP4 ADD DUP5 PUSH2 0x8E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x90F JUMP JUMPDEST DUP2 EQ PUSH2 0x92B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x93C DUP2 PUSH2 0x918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x957 JUMPI PUSH2 0x956 PUSH2 0x85E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x964 DUP5 DUP3 DUP6 ADD PUSH2 0x92E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x981 DUP2 PUSH2 0x96D JUMP JUMPDEST DUP2 EQ PUSH2 0x98B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x99C DUP2 PUSH2 0x978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B7 JUMPI PUSH2 0x9B6 PUSH2 0x85E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9C4 DUP5 DUP3 DUP6 ADD PUSH2 0x98E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D6 DUP2 PUSH2 0x96D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EF PUSH0 DUP4 ADD DUP5 PUSH2 0x9CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9FE DUP2 PUSH2 0x90F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA17 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA61 PUSH1 0xC DUP4 PUSH2 0xA1D JUMP JUMPDEST SWAP2 POP PUSH2 0xA6C DUP3 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA8E DUP2 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F7261636C65206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAC9 PUSH1 0x16 DUP4 PUSH2 0xA1D JUMP JUMPDEST SWAP2 POP PUSH2 0xAD4 DUP3 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAF6 DUP2 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x2C 0xD7 DUPN 0xEF KECCAK256 0xB4 PUSH17 0xC762CA25ACC01F12A4E3894BB7CF880418 TSTORE AND GAS CODESIZE 0xD9 PUSH25 0x1864736F6C634300081D003300000000000000000000000000 ",
							"sourceMap": "347:1656:2:-:0;;;430:5;401:34;;;;;;;;;;;;;;;;;;;;736:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;823:5;793:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1589:1:3;1572:19;;:5;:19;;;1564:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1634:5;1627:4;;:12;;;;;;;;;;;;;;;;;;1659:10;1650:6;;:19;;;;;;;;;;;;;;;;;;1526:151;736:96:2;;347:1656;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;1710:169::-;1794:11;1828:6;1823:3;1816:19;1868:4;1863:3;1859:14;1844:29;;1710:169;;;;:::o;1885:170::-;2025:22;2021:1;2013:6;2009:14;2002:46;1885:170;:::o;2061:366::-;2203:3;2224:67;2288:2;2283:3;2224:67;:::i;:::-;2217:74;;2300:93;2389:3;2300:93;:::i;:::-;2418:2;2413:3;2409:12;2402:19;;2061:366;;;:::o;2433:419::-;2599:4;2637:2;2626:9;2622:18;2614:26;;2686:9;2680:4;2676:20;2672:1;2661:9;2657:17;2650:47;2714:131;2840:4;2714:131;:::i;:::-;2706:139;;2433:419;;;:::o;347:1656:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 1807,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 2135,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1942,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@backendOperator_193": {
									"entryPoint": 1601,
									"id": 193,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentIndexPrice_335": {
									"entryPoint": 1589,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositFeeBps_195": {
									"entryPoint": 1595,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositsPaused_189": {
									"entryPoint": 1085,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isAuthorizedOperator_324": {
									"entryPoint": 1401,
									"id": 324,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@oracle_191": {
									"entryPoint": 1363,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1550,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner__333": {
									"entryPoint": 1638,
									"id": 333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1103,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setBackendOperator_283": {
									"entryPoint": 685,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDepositFee_306": {
									"entryPoint": 852,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setDepositPaused_241": {
									"entryPoint": 994,
									"id": 241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOracle_267": {
									"entryPoint": 1122,
									"id": 267,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1675,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@usdt_331": {
									"entryPoint": 815,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 2466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1": {
									"entryPoint": 2605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3": {
									"entryPoint": 2709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5700:4",
										"nodeType": "YulBlock",
										"src": "0:5700:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "907:263:4",
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:4",
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nativeSrc": "955:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nativeSrc": "955:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nativeSrc": "924:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:4",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nativeSrc": "920:32:4",
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nativeSrc": "917:119:4",
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nativeSrc": "1046:117:4",
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nativeSrc": "1061:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nativeSrc": "1121:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nativeSrc": "1100:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:4",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:4",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:4",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nativeSrc": "1241:53:4",
													"nodeType": "YulBlock",
													"src": "1241:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1258:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1281:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1263:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:4"
																		},
																		"nativeSrc": "1263:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1251:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:4"
																},
																"nativeSrc": "1251:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1251:37:4"
															},
															"nativeSrc": "1251:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1176:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:4",
														"nodeType": "YulTypedName",
														"src": "1229:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1236:3:4",
														"nodeType": "YulTypedName",
														"src": "1236:3:4",
														"type": ""
													}
												],
												"src": "1176:118:4"
											},
											{
												"body": {
													"nativeSrc": "1398:124:4",
													"nodeType": "YulBlock",
													"src": "1398:124:4",
													"statements": [
														{
															"nativeSrc": "1408:26:4",
															"nodeType": "YulAssignment",
															"src": "1408:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1420:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1431:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1416:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:4"
																},
																"nativeSrc": "1416:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1416:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1408:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1488:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1501:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1512:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1497:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:4"
																		},
																		"nativeSrc": "1497:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1444:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:4"
																},
																"nativeSrc": "1444:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1444:71:4"
															},
															"nativeSrc": "1444:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1300:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1370:9:4",
														"nodeType": "YulTypedName",
														"src": "1370:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1382:6:4",
														"nodeType": "YulTypedName",
														"src": "1382:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1393:4:4",
														"nodeType": "YulTypedName",
														"src": "1393:4:4",
														"type": ""
													}
												],
												"src": "1300:222:4"
											},
											{
												"body": {
													"nativeSrc": "1573:32:4",
													"nodeType": "YulBlock",
													"src": "1573:32:4",
													"statements": [
														{
															"nativeSrc": "1583:16:4",
															"nodeType": "YulAssignment",
															"src": "1583:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1594:5:4",
																"nodeType": "YulIdentifier",
																"src": "1594:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1583:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1583:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1528:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1555:5:4",
														"nodeType": "YulTypedName",
														"src": "1555:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1565:7:4",
														"nodeType": "YulTypedName",
														"src": "1565:7:4",
														"type": ""
													}
												],
												"src": "1528:77:4"
											},
											{
												"body": {
													"nativeSrc": "1654:79:4",
													"nodeType": "YulBlock",
													"src": "1654:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:4",
																"nodeType": "YulBlock",
																"src": "1711:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:4"
																			},
																			"nativeSrc": "1713:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:4"
																		},
																		"nativeSrc": "1713:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:4"
																				},
																				"nativeSrc": "1684:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:4"
																		},
																		"nativeSrc": "1674:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:4"
																},
																"nativeSrc": "1667:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:4"
															},
															"nativeSrc": "1664:63:4",
															"nodeType": "YulIf",
															"src": "1664:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:4",
														"nodeType": "YulTypedName",
														"src": "1647:5:4",
														"type": ""
													}
												],
												"src": "1611:122:4"
											},
											{
												"body": {
													"nativeSrc": "1791:87:4",
													"nodeType": "YulBlock",
													"src": "1791:87:4",
													"statements": [
														{
															"nativeSrc": "1801:29:4",
															"nodeType": "YulAssignment",
															"src": "1801:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:4"
																},
																"nativeSrc": "1810:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:4"
																},
																"nativeSrc": "1839:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:4"
															},
															"nativeSrc": "1839:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:4",
														"nodeType": "YulTypedName",
														"src": "1769:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:4",
														"nodeType": "YulTypedName",
														"src": "1777:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:4",
														"nodeType": "YulTypedName",
														"src": "1785:5:4",
														"type": ""
													}
												],
												"src": "1739:139:4"
											},
											{
												"body": {
													"nativeSrc": "1950:263:4",
													"nodeType": "YulBlock",
													"src": "1950:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:4",
																"nodeType": "YulBlock",
																"src": "1996:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:4"
																			},
																			"nativeSrc": "1998:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:4"
																		},
																		"nativeSrc": "1998:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:4"
																		},
																		"nativeSrc": "1967:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:4"
																},
																"nativeSrc": "1963:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:4"
															},
															"nativeSrc": "1960:119:4",
															"nodeType": "YulIf",
															"src": "1960:119:4"
														},
														{
															"nativeSrc": "2089:117:4",
															"nodeType": "YulBlock",
															"src": "2089:117:4",
															"statements": [
																{
																	"nativeSrc": "2104:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:4"
																				},
																				"nativeSrc": "2164:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:4"
																		},
																		"nativeSrc": "2143:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:4",
														"nodeType": "YulTypedName",
														"src": "1920:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:4",
														"nodeType": "YulTypedName",
														"src": "1931:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:4",
														"nodeType": "YulTypedName",
														"src": "1943:6:4",
														"type": ""
													}
												],
												"src": "1884:329:4"
											},
											{
												"body": {
													"nativeSrc": "2261:48:4",
													"nodeType": "YulBlock",
													"src": "2261:48:4",
													"statements": [
														{
															"nativeSrc": "2271:32:4",
															"nodeType": "YulAssignment",
															"src": "2271:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2296:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2296:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2289:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2289:6:4"
																		},
																		"nativeSrc": "2289:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2282:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2282:6:4"
																},
																"nativeSrc": "2282:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2282:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2271:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2271:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2219:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2243:5:4",
														"nodeType": "YulTypedName",
														"src": "2243:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2253:7:4",
														"nodeType": "YulTypedName",
														"src": "2253:7:4",
														"type": ""
													}
												],
												"src": "2219:90:4"
											},
											{
												"body": {
													"nativeSrc": "2355:76:4",
													"nodeType": "YulBlock",
													"src": "2355:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2409:16:4",
																"nodeType": "YulBlock",
																"src": "2409:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2418:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2418:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2421:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2421:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2411:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2411:6:4"
																			},
																			"nativeSrc": "2411:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2411:12:4"
																		},
																		"nativeSrc": "2411:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2411:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2378:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2378:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2400:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2400:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2385:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "2385:14:4"
																				},
																				"nativeSrc": "2385:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2385:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2375:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2375:2:4"
																		},
																		"nativeSrc": "2375:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2375:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2368:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2368:6:4"
																},
																"nativeSrc": "2368:40:4",
																"nodeType": "YulFunctionCall",
																"src": "2368:40:4"
															},
															"nativeSrc": "2365:60:4",
															"nodeType": "YulIf",
															"src": "2365:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2315:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2348:5:4",
														"nodeType": "YulTypedName",
														"src": "2348:5:4",
														"type": ""
													}
												],
												"src": "2315:116:4"
											},
											{
												"body": {
													"nativeSrc": "2486:84:4",
													"nodeType": "YulBlock",
													"src": "2486:84:4",
													"statements": [
														{
															"nativeSrc": "2496:29:4",
															"nodeType": "YulAssignment",
															"src": "2496:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2518:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2518:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2505:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2505:12:4"
																},
																"nativeSrc": "2505:20:4",
																"nodeType": "YulFunctionCall",
																"src": "2505:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2496:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2496:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2558:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2558:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2534:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "2534:23:4"
																},
																"nativeSrc": "2534:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2534:30:4"
															},
															"nativeSrc": "2534:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2534:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "2437:133:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2464:6:4",
														"nodeType": "YulTypedName",
														"src": "2464:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2472:3:4",
														"nodeType": "YulTypedName",
														"src": "2472:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2480:5:4",
														"nodeType": "YulTypedName",
														"src": "2480:5:4",
														"type": ""
													}
												],
												"src": "2437:133:4"
											},
											{
												"body": {
													"nativeSrc": "2639:260:4",
													"nodeType": "YulBlock",
													"src": "2639:260:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2685:83:4",
																"nodeType": "YulBlock",
																"src": "2685:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2687:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2687:77:4"
																			},
																			"nativeSrc": "2687:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2687:79:4"
																		},
																		"nativeSrc": "2687:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2687:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2660:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2660:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2669:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2669:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2656:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2656:3:4"
																		},
																		"nativeSrc": "2656:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2656:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2681:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2681:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2652:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2652:3:4"
																},
																"nativeSrc": "2652:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2652:32:4"
															},
															"nativeSrc": "2649:119:4",
															"nodeType": "YulIf",
															"src": "2649:119:4"
														},
														{
															"nativeSrc": "2778:114:4",
															"nodeType": "YulBlock",
															"src": "2778:114:4",
															"statements": [
																{
																	"nativeSrc": "2793:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2793:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2807:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2807:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2797:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2797:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2822:60:4",
																	"nodeType": "YulAssignment",
																	"src": "2822:60:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2854:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2854:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2865:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2865:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2850:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2850:3:4"
																				},
																				"nativeSrc": "2850:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2850:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2874:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2874:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "2832:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2832:17:4"
																		},
																		"nativeSrc": "2832:50:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2832:50:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2822:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2822:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "2576:323:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2609:9:4",
														"nodeType": "YulTypedName",
														"src": "2609:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2620:7:4",
														"nodeType": "YulTypedName",
														"src": "2620:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2632:6:4",
														"nodeType": "YulTypedName",
														"src": "2632:6:4",
														"type": ""
													}
												],
												"src": "2576:323:4"
											},
											{
												"body": {
													"nativeSrc": "2964:50:4",
													"nodeType": "YulBlock",
													"src": "2964:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2981:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2981:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3001:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3001:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2986:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "2986:14:4"
																		},
																		"nativeSrc": "2986:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2986:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2974:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2974:6:4"
																},
																"nativeSrc": "2974:34:4",
																"nodeType": "YulFunctionCall",
																"src": "2974:34:4"
															},
															"nativeSrc": "2974:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "2974:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2905:109:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:4",
														"nodeType": "YulTypedName",
														"src": "2952:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2959:3:4",
														"nodeType": "YulTypedName",
														"src": "2959:3:4",
														"type": ""
													}
												],
												"src": "2905:109:4"
											},
											{
												"body": {
													"nativeSrc": "3112:118:4",
													"nodeType": "YulBlock",
													"src": "3112:118:4",
													"statements": [
														{
															"nativeSrc": "3122:26:4",
															"nodeType": "YulAssignment",
															"src": "3122:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3134:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3134:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3145:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3145:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3130:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3130:3:4"
																},
																"nativeSrc": "3130:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3130:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3122:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3122:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3196:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3196:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3209:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3209:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3220:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3220:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3205:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:4"
																		},
																		"nativeSrc": "3205:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3205:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3158:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "3158:37:4"
																},
																"nativeSrc": "3158:65:4",
																"nodeType": "YulFunctionCall",
																"src": "3158:65:4"
															},
															"nativeSrc": "3158:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "3158:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3020:210:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3084:9:4",
														"nodeType": "YulTypedName",
														"src": "3084:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3096:6:4",
														"nodeType": "YulTypedName",
														"src": "3096:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3107:4:4",
														"nodeType": "YulTypedName",
														"src": "3107:4:4",
														"type": ""
													}
												],
												"src": "3020:210:4"
											},
											{
												"body": {
													"nativeSrc": "3301:53:4",
													"nodeType": "YulBlock",
													"src": "3301:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3318:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3318:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3323:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "3323:17:4"
																		},
																		"nativeSrc": "3323:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3323:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3311:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3311:6:4"
																},
																"nativeSrc": "3311:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3311:37:4"
															},
															"nativeSrc": "3311:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3311:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3236:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3289:5:4",
														"nodeType": "YulTypedName",
														"src": "3289:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3296:3:4",
														"nodeType": "YulTypedName",
														"src": "3296:3:4",
														"type": ""
													}
												],
												"src": "3236:118:4"
											},
											{
												"body": {
													"nativeSrc": "3458:124:4",
													"nodeType": "YulBlock",
													"src": "3458:124:4",
													"statements": [
														{
															"nativeSrc": "3468:26:4",
															"nodeType": "YulAssignment",
															"src": "3468:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3480:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3480:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3491:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3491:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3476:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3476:3:4"
																},
																"nativeSrc": "3476:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3476:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3468:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3468:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3548:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3548:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3572:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:4"
																		},
																		"nativeSrc": "3557:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3504:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3504:43:4"
																},
																"nativeSrc": "3504:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3504:71:4"
															},
															"nativeSrc": "3504:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3504:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3360:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3430:9:4",
														"nodeType": "YulTypedName",
														"src": "3430:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3442:6:4",
														"nodeType": "YulTypedName",
														"src": "3442:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3453:4:4",
														"nodeType": "YulTypedName",
														"src": "3453:4:4",
														"type": ""
													}
												],
												"src": "3360:222:4"
											},
											{
												"body": {
													"nativeSrc": "3684:73:4",
													"nodeType": "YulBlock",
													"src": "3684:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3701:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3701:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3706:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3706:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3694:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3694:6:4"
																},
																"nativeSrc": "3694:19:4",
																"nodeType": "YulFunctionCall",
																"src": "3694:19:4"
															},
															"nativeSrc": "3694:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "3694:19:4"
														},
														{
															"nativeSrc": "3722:29:4",
															"nodeType": "YulAssignment",
															"src": "3722:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3741:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3741:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3746:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3746:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3737:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3737:3:4"
																},
																"nativeSrc": "3737:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3737:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3722:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "3722:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3588:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3656:3:4",
														"nodeType": "YulTypedName",
														"src": "3656:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3661:6:4",
														"nodeType": "YulTypedName",
														"src": "3661:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3672:11:4",
														"nodeType": "YulTypedName",
														"src": "3672:11:4",
														"type": ""
													}
												],
												"src": "3588:169:4"
											},
											{
												"body": {
													"nativeSrc": "3869:56:4",
													"nodeType": "YulBlock",
													"src": "3869:56:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3891:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3891:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3899:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3899:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3887:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3887:3:4"
																		},
																		"nativeSrc": "3887:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3887:14:4"
																	},
																	{
																		"hexValue": "46656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "3903:14:4",
																		"nodeType": "YulLiteral",
																		"src": "3903:14:4",
																		"type": "",
																		"value": "Fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3880:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:4"
																},
																"nativeSrc": "3880:38:4",
																"nodeType": "YulFunctionCall",
																"src": "3880:38:4"
															},
															"nativeSrc": "3880:38:4",
															"nodeType": "YulExpressionStatement",
															"src": "3880:38:4"
														}
													]
												},
												"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
												"nativeSrc": "3763:162:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3861:6:4",
														"nodeType": "YulTypedName",
														"src": "3861:6:4",
														"type": ""
													}
												],
												"src": "3763:162:4"
											},
											{
												"body": {
													"nativeSrc": "4077:220:4",
													"nodeType": "YulBlock",
													"src": "4077:220:4",
													"statements": [
														{
															"nativeSrc": "4087:74:4",
															"nodeType": "YulAssignment",
															"src": "4087:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4153:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4153:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4158:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4158:2:4",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4094:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "4094:58:4"
																},
																"nativeSrc": "4094:67:4",
																"nodeType": "YulFunctionCall",
																"src": "4094:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4087:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4087:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4259:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4259:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																	"nativeSrc": "4170:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "4170:88:4"
																},
																"nativeSrc": "4170:93:4",
																"nodeType": "YulFunctionCall",
																"src": "4170:93:4"
															},
															"nativeSrc": "4170:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "4170:93:4"
														},
														{
															"nativeSrc": "4272:19:4",
															"nodeType": "YulAssignment",
															"src": "4272:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4283:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4283:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4288:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4288:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4279:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4279:3:4"
																},
																"nativeSrc": "4279:12:4",
																"nodeType": "YulFunctionCall",
																"src": "4279:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4272:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4272:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3931:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4065:3:4",
														"nodeType": "YulTypedName",
														"src": "4065:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4073:3:4",
														"nodeType": "YulTypedName",
														"src": "4073:3:4",
														"type": ""
													}
												],
												"src": "3931:366:4"
											},
											{
												"body": {
													"nativeSrc": "4474:248:4",
													"nodeType": "YulBlock",
													"src": "4474:248:4",
													"statements": [
														{
															"nativeSrc": "4484:26:4",
															"nodeType": "YulAssignment",
															"src": "4484:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4496:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4496:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4507:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4507:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4492:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4492:3:4"
																},
																"nativeSrc": "4492:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4492:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4484:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4484:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4531:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4531:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4542:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4542:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4527:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:4"
																		},
																		"nativeSrc": "4527:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4550:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4550:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4556:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4556:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4546:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4546:3:4"
																		},
																		"nativeSrc": "4546:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4546:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4520:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:4"
																},
																"nativeSrc": "4520:47:4",
																"nodeType": "YulFunctionCall",
																"src": "4520:47:4"
															},
															"nativeSrc": "4520:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "4520:47:4"
														},
														{
															"nativeSrc": "4576:139:4",
															"nodeType": "YulAssignment",
															"src": "4576:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4710:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4710:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4584:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "4584:124:4"
																},
																"nativeSrc": "4584:131:4",
																"nodeType": "YulFunctionCall",
																"src": "4584:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4576:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4576:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4303:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4454:9:4",
														"nodeType": "YulTypedName",
														"src": "4454:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4469:4:4",
														"nodeType": "YulTypedName",
														"src": "4469:4:4",
														"type": ""
													}
												],
												"src": "4303:419:4"
											},
											{
												"body": {
													"nativeSrc": "4834:66:4",
													"nodeType": "YulBlock",
													"src": "4834:66:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4856:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4856:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4864:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4864:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4852:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:4"
																		},
																		"nativeSrc": "4852:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4852:14:4"
																	},
																	{
																		"hexValue": "496e76616c6964206f7261636c652061646472657373",
																		"kind": "string",
																		"nativeSrc": "4868:24:4",
																		"nodeType": "YulLiteral",
																		"src": "4868:24:4",
																		"type": "",
																		"value": "Invalid oracle address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4845:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:4"
																},
																"nativeSrc": "4845:48:4",
																"nodeType": "YulFunctionCall",
																"src": "4845:48:4"
															},
															"nativeSrc": "4845:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "4845:48:4"
														}
													]
												},
												"name": "store_literal_in_memory_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3",
												"nativeSrc": "4728:172:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4826:6:4",
														"nodeType": "YulTypedName",
														"src": "4826:6:4",
														"type": ""
													}
												],
												"src": "4728:172:4"
											},
											{
												"body": {
													"nativeSrc": "5052:220:4",
													"nodeType": "YulBlock",
													"src": "5052:220:4",
													"statements": [
														{
															"nativeSrc": "5062:74:4",
															"nodeType": "YulAssignment",
															"src": "5062:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5128:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5128:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5133:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5133:2:4",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5069:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "5069:58:4"
																},
																"nativeSrc": "5069:67:4",
																"nodeType": "YulFunctionCall",
																"src": "5069:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5062:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5062:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5234:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5234:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3",
																	"nativeSrc": "5145:88:4",
																	"nodeType": "YulIdentifier",
																	"src": "5145:88:4"
																},
																"nativeSrc": "5145:93:4",
																"nodeType": "YulFunctionCall",
																"src": "5145:93:4"
															},
															"nativeSrc": "5145:93:4",
															"nodeType": "YulExpressionStatement",
															"src": "5145:93:4"
														},
														{
															"nativeSrc": "5247:19:4",
															"nodeType": "YulAssignment",
															"src": "5247:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5258:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5258:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5263:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5263:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5254:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:4"
																},
																"nativeSrc": "5254:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5254:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5247:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5247:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4906:366:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5040:3:4",
														"nodeType": "YulTypedName",
														"src": "5040:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5048:3:4",
														"nodeType": "YulTypedName",
														"src": "5048:3:4",
														"type": ""
													}
												],
												"src": "4906:366:4"
											},
											{
												"body": {
													"nativeSrc": "5449:248:4",
													"nodeType": "YulBlock",
													"src": "5449:248:4",
													"statements": [
														{
															"nativeSrc": "5459:26:4",
															"nodeType": "YulAssignment",
															"src": "5459:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5471:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5471:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5482:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5482:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5467:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5467:3:4"
																},
																"nativeSrc": "5467:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5467:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5459:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5459:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5506:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5506:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5517:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5517:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5502:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5502:3:4"
																		},
																		"nativeSrc": "5502:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5502:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5525:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "5525:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5531:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5531:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5521:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5521:3:4"
																		},
																		"nativeSrc": "5521:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5521:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5495:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5495:6:4"
																},
																"nativeSrc": "5495:47:4",
																"nodeType": "YulFunctionCall",
																"src": "5495:47:4"
															},
															"nativeSrc": "5495:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "5495:47:4"
														},
														{
															"nativeSrc": "5551:139:4",
															"nodeType": "YulAssignment",
															"src": "5551:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5685:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5685:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5559:124:4",
																	"nodeType": "YulIdentifier",
																	"src": "5559:124:4"
																},
																"nativeSrc": "5559:131:4",
																"nodeType": "YulFunctionCall",
																"src": "5559:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5551:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5551:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5278:419:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5429:9:4",
														"nodeType": "YulTypedName",
														"src": "5429:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5444:4:4",
														"nodeType": "YulTypedName",
														"src": "5444:4:4",
														"type": ""
													}
												],
												"src": "5278:419:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid oracle address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c80637dc0d1d011610095578063ab87982711610064578063ab87982714610237578063c7b6084c14610255578063e766307914610273578063f2fde38b14610291576100f3565b80637dc0d1d0146101ad57806382d52c1e146101cb5780638da5cb5b146101fb5780638e6b409e14610219576100f3565b8063543f66a4116100d1578063543f66a41461014d57806360da3e8314610169578063715018a6146101875780637adbf97314610191576100f3565b806302262ced146100f75780632f48ab7d14610113578063490ae21014610131575b5f5ffd5b610111600480360381019061010c91906108bc565b6102ad565b005b61011b61032f565b60405161012891906108f6565b60405180910390f35b61014b60048036038101906101469190610942565b610354565b005b610167600480360381019061016291906109a2565b6103e2565b005b61017161043d565b60405161017e91906109dc565b60405180910390f35b61018f61044f565b005b6101ab60048036038101906101a691906108bc565b610462565b005b6101b5610553565b6040516101c291906108f6565b60405180910390f35b6101e560048036038101906101e091906108bc565b610579565b6040516101f291906109dc565b60405180910390f35b61020361060e565b60405161021091906108f6565b60405180910390f35b610221610635565b60405161022e9190610a04565b60405180910390f35b61023f61063b565b60405161024c9190610a04565b60405180910390f35b61025d610641565b60405161026a91906108f6565b60405180910390f35b61027b610666565b60405161028891906108f6565b60405180910390f35b6102ab60048036038101906102a691906108bc565b61068b565b005b6102b561070f565b8060085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f8f044878f4d84ccc4d80555f24f9428c1d9297c48b7c7a17e6a50263be17ef548160405161032491906108f6565b60405180910390a150565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61035c61070f565b6101f48111156103a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039890610a77565b60405180910390fd5b806009819055507f206dd15151fcc83315419fbe53a71fcf9c09da803767d3dd05f7874e1b9bf645816040516103d79190610a04565b60405180910390a150565b6103ea61070f565b8060075f6101000a81548160ff0219169083151502179055507f5ef34f53269a04b5b817e5be24a51ba6b477118b399ec9dd5b2baf5b299563dc8160405161043291906109dc565b60405180910390a150565b60075f9054906101000a900460ff1681565b61045761070f565b6104605f610796565b565b61046a61070f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104cf90610adf565b60405180910390fd5b80600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b81809403948160405161054891906108f6565b60405180910390a150565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f61058261060e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480610607575060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b9050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60045481565b60095481565b60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61069361070f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610703575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106fa91906108f6565b60405180910390fd5b61070c81610796565b50565b610717610857565b73ffffffffffffffffffffffffffffffffffffffff1661073561060e565b73ffffffffffffffffffffffffffffffffffffffff161461079457610758610857565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161078b91906108f6565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61088b82610862565b9050919050565b61089b81610881565b81146108a5575f5ffd5b50565b5f813590506108b681610892565b92915050565b5f602082840312156108d1576108d061085e565b5b5f6108de848285016108a8565b91505092915050565b6108f081610881565b82525050565b5f6020820190506109095f8301846108e7565b92915050565b5f819050919050565b6109218161090f565b811461092b575f5ffd5b50565b5f8135905061093c81610918565b92915050565b5f602082840312156109575761095661085e565b5b5f6109648482850161092e565b91505092915050565b5f8115159050919050565b6109818161096d565b811461098b575f5ffd5b50565b5f8135905061099c81610978565b92915050565b5f602082840312156109b7576109b661085e565b5b5f6109c48482850161098e565b91505092915050565b6109d68161096d565b82525050565b5f6020820190506109ef5f8301846109cd565b92915050565b6109fe8161090f565b82525050565b5f602082019050610a175f8301846109f5565b92915050565b5f82825260208201905092915050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f610a61600c83610a1d565b9150610a6c82610a2d565b602082019050919050565b5f6020820190508181035f830152610a8e81610a55565b9050919050565b7f496e76616c6964206f7261636c652061646472657373000000000000000000005f82015250565b5f610ac9601683610a1d565b9150610ad482610a95565b602082019050919050565b5f6020820190508181035f830152610af681610abd565b905091905056fea2646970667358221220c82cd7e6ef20b470c762ca25acc01f12a4e3894bb7cf8804185d165a38d9781864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DC0D1D0 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xAB879827 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xAB879827 EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0xC7B6084C EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xE7663079 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x291 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x82D52C1E EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x8E6B409E EQ PUSH2 0x219 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x543F66A4 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x543F66A4 EQ PUSH2 0x14D JUMPI DUP1 PUSH4 0x60DA3E83 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x7ADBF973 EQ PUSH2 0x191 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x2262CED EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x490AE210 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11B PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x128 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x942 JUMP JUMPDEST PUSH2 0x354 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x9A2 JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH2 0x44F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x203 PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH2 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x63B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x68B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH2 0x70F JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x8F044878F4D84CCC4D80555F24F9428C1D9297C48B7C7A17E6A50263BE17EF54 DUP2 PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x35C PUSH2 0x70F JUMP JUMPDEST PUSH2 0x1F4 DUP2 GT ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x398 SWAP1 PUSH2 0xA77 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH32 0x206DD15151FCC83315419FBE53A71FCF9C09DA803767D3DD05F7874E1B9BF645 DUP2 PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x3EA PUSH2 0x70F JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5EF34F53269A04B5B817E5BE24A51BA6B477118B399EC9DD5B2BAF5B299563DC DUP2 PUSH1 0x40 MLOAD PUSH2 0x432 SWAP2 SWAP1 PUSH2 0x9DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x457 PUSH2 0x70F JUMP JUMPDEST PUSH2 0x460 PUSH0 PUSH2 0x796 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x46A PUSH2 0x70F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CF SWAP1 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394 DUP2 PUSH1 0x40 MLOAD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x582 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x607 JUMPI POP PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x693 PUSH2 0x70F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70C DUP2 PUSH2 0x796 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x717 PUSH2 0x857 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x735 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x794 JUMPI PUSH2 0x758 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78B SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x88B DUP3 PUSH2 0x862 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89B DUP2 PUSH2 0x881 JUMP JUMPDEST DUP2 EQ PUSH2 0x8A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8B6 DUP2 PUSH2 0x892 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D1 JUMPI PUSH2 0x8D0 PUSH2 0x85E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8DE DUP5 DUP3 DUP6 ADD PUSH2 0x8A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH2 0x881 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x909 PUSH0 DUP4 ADD DUP5 PUSH2 0x8E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x921 DUP2 PUSH2 0x90F JUMP JUMPDEST DUP2 EQ PUSH2 0x92B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x93C DUP2 PUSH2 0x918 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x957 JUMPI PUSH2 0x956 PUSH2 0x85E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x964 DUP5 DUP3 DUP6 ADD PUSH2 0x92E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x981 DUP2 PUSH2 0x96D JUMP JUMPDEST DUP2 EQ PUSH2 0x98B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x99C DUP2 PUSH2 0x978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B7 JUMPI PUSH2 0x9B6 PUSH2 0x85E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9C4 DUP5 DUP3 DUP6 ADD PUSH2 0x98E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9D6 DUP2 PUSH2 0x96D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9EF PUSH0 DUP4 ADD DUP5 PUSH2 0x9CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x9FE DUP2 PUSH2 0x90F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA17 PUSH0 DUP4 ADD DUP5 PUSH2 0x9F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA61 PUSH1 0xC DUP4 PUSH2 0xA1D JUMP JUMPDEST SWAP2 POP PUSH2 0xA6C DUP3 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA8E DUP2 PUSH2 0xA55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206F7261636C65206164647265737300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAC9 PUSH1 0x16 DUP4 PUSH2 0xA1D JUMP JUMPDEST SWAP2 POP PUSH2 0xAD4 DUP3 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAF6 DUP2 PUSH2 0xABD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x2C 0xD7 DUPN 0xEF KECCAK256 0xB4 PUSH17 0xC762CA25ACC01F12A4E3894BB7CF880418 TSTORE AND GAS CODESIZE 0xD9 PUSH25 0x1864736F6C634300081D003300000000000000000000000000 ",
							"sourceMap": "347:1656:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;275:19:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1589:189:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;902:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;401:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1110:195:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;442:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1853:147;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;492:32:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;507:28:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;470:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;381:21:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1367:161:2;1531:13:0;:11;:13::i;:::-;1462:9:2::1;1444:15;;:27;;;;;;;;;;;;;;;;;;1487:33;1510:9;1487:33;;;;;;:::i;:::-;;;;;;;;1367:161:::0;:::o;275:19:3:-;;;;;;;;;;;;;:::o;1589:189:2:-;1531:13:0;:11;:13::i;:::-;1676:3:2::1;1666:6;:13;;1658:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1723:6;1707:13;:22;;;;1745:25;1763:6;1745:25;;;;;;:::i;:::-;;;;;;;;1589:189:::0;:::o;902:138::-;1531:13:0;:11;:13::i;:::-;988:6:2::1;971:14;;:23;;;;;;;;;;;;;;;;;;1010:22;1025:6;1010:22;;;;;;:::i;:::-;;;;;;;;902:138:::0;:::o;401:34::-;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1110:195:2:-;1531:13:0;:11;:13::i;:::-;1203:1:2::1;1184:21;;:7;:21;;::::0;1176:56:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1252:7;1243:6;;:16;;;;;;;;;;;;;;;;;;1275:22;1289:7;1275:22;;;;;;:::i;:::-;;;;;;;;1110:195:::0;:::o;442:21::-;;;;;;;;;;;;;:::o;1853:147::-;1920:4;1955:7;:5;:7::i;:::-;1945:17;;:6;:17;;;:46;;;;1976:15;;;;;;;;;;;1966:25;;:6;:25;;;1945:46;1937:55;;1853:147;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;492:32:3:-;;;;:::o;507:28:2:-;;;;:::o;470:30::-;;;;;;;;;;;;;:::o;381:21:3:-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:77::-;1565:7;1594:5;1583:16;;1528:77;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:90::-;2253:7;2296:5;2289:13;2282:21;2271:32;;2219:90;;;:::o;2315:116::-;2385:21;2400:5;2385:21;:::i;:::-;2378:5;2375:32;2365:60;;2421:1;2418;2411:12;2365:60;2315:116;:::o;2437:133::-;2480:5;2518:6;2505:20;2496:29;;2534:30;2558:5;2534:30;:::i;:::-;2437:133;;;;:::o;2576:323::-;2632:6;2681:2;2669:9;2660:7;2656:23;2652:32;2649:119;;;2687:79;;:::i;:::-;2649:119;2807:1;2832:50;2874:7;2865:6;2854:9;2850:22;2832:50;:::i;:::-;2822:60;;2778:114;2576:323;;;;:::o;2905:109::-;2986:21;3001:5;2986:21;:::i;:::-;2981:3;2974:34;2905:109;;:::o;3020:210::-;3107:4;3145:2;3134:9;3130:18;3122:26;;3158:65;3220:1;3209:9;3205:17;3196:6;3158:65;:::i;:::-;3020:210;;;;:::o;3236:118::-;3323:24;3341:5;3323:24;:::i;:::-;3318:3;3311:37;3236:118;;:::o;3360:222::-;3453:4;3491:2;3480:9;3476:18;3468:26;;3504:71;3572:1;3561:9;3557:17;3548:6;3504:71;:::i;:::-;3360:222;;;;:::o;3588:169::-;3672:11;3706:6;3701:3;3694:19;3746:4;3741:3;3737:14;3722:29;;3588:169;;;;:::o;3763:162::-;3903:14;3899:1;3891:6;3887:14;3880:38;3763:162;:::o;3931:366::-;4073:3;4094:67;4158:2;4153:3;4094:67;:::i;:::-;4087:74;;4170:93;4259:3;4170:93;:::i;:::-;4288:2;4283:3;4279:12;4272:19;;3931:366;;;:::o;4303:419::-;4469:4;4507:2;4496:9;4492:18;4484:26;;4556:9;4550:4;4546:20;4542:1;4531:9;4527:17;4520:47;4584:131;4710:4;4584:131;:::i;:::-;4576:139;;4303:419;;;:::o;4728:172::-;4868:24;4864:1;4856:6;4852:14;4845:48;4728:172;:::o;4906:366::-;5048:3;5069:67;5133:2;5128:3;5069:67;:::i;:::-;5062:74;;5145:93;5234:3;5145:93;:::i;:::-;5263:2;5258:3;5254:12;5247:19;;4906:366;;;:::o;5278:419::-;5444:4;5482:2;5471:9;5467:18;5459:26;;5531:9;5525:4;5521:20;5517:1;5506:9;5502:17;5495:47;5559:131;5685:4;5559:131;:::i;:::-;5551:139;;5278:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "573400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"backendOperator()": "2552",
								"currentIndexPrice()": "2514",
								"depositFeeBps()": "2447",
								"depositsPaused()": "2511",
								"isAuthorizedOperator(address)": "5053",
								"oracle()": "2582",
								"owner()": "2581",
								"owner_()": "2574",
								"renounceOwnership()": "infinite",
								"setBackendOperator(address)": "infinite",
								"setDepositFee(uint256)": "infinite",
								"setDepositPaused(bool)": "infinite",
								"setOracle(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"usdt()": "2554"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 347,
									"end": 2003,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 430,
									"end": 435,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 435,
									"name": "PUSH",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 401,
									"end": 435,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 401,
									"end": 435,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 401,
									"end": 435,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 401,
									"end": 435,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 401,
									"end": 435,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 736,
									"end": 832,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 832,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 736,
									"end": 832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 736,
									"end": 832,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 736,
									"end": 832,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 736,
									"end": 832,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 736,
									"end": 832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 736,
									"end": 832,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 823,
									"end": 828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 793,
									"end": 805,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1589,
									"end": 1590,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1572,
									"end": 1591,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1572,
									"end": 1591,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1572,
									"end": 1577,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1572,
									"end": 1591,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1572,
									"end": 1591,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1572,
									"end": 1591,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1564,
									"end": 1616,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1564,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1631,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1627,
									"end": 1631,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1627,
									"end": 1639,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1659,
									"end": 1669,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1656,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1650,
									"end": 1656,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1650,
									"end": 1669,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1526,
									"end": 1677,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 736,
									"end": 832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 736,
									"end": 832,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1794,
									"end": 1805,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1828,
									"end": 1834,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1823,
									"end": 1826,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1816,
									"end": 1835,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1868,
									"end": 1872,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1863,
									"end": 1866,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1859,
									"end": 1873,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1844,
									"end": 1873,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1879,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 2055,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1885,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2047,
									"name": "PUSH",
									"source": 4,
									"value": "496E76616C696420555344542061646472657373000000000000000000000000"
								},
								{
									"begin": 2021,
									"end": 2022,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2013,
									"end": 2019,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2002,
									"end": 2048,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 2055,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 2055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2427,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 2061,
									"end": 2427,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2203,
									"end": 2206,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2224,
									"end": 2291,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2288,
									"end": 2290,
									"name": "PUSH",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2283,
									"end": 2286,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2224,
									"end": 2291,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 2224,
									"end": 2291,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2224,
									"end": 2291,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2224,
									"end": 2291,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2217,
									"end": 2291,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2217,
									"end": 2291,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2389,
									"end": 2392,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2393,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 2300,
									"end": 2393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2300,
									"end": 2393,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 2300,
									"end": 2393,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2418,
									"end": 2420,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2413,
									"end": 2416,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2409,
									"end": 2421,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2402,
									"end": 2421,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2402,
									"end": 2421,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2427,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2427,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2427,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2427,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2599,
									"end": 2603,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2639,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2626,
									"end": 2635,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2622,
									"end": 2640,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2614,
									"end": 2640,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2614,
									"end": 2640,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2686,
									"end": 2695,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2680,
									"end": 2684,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2676,
									"end": 2696,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2672,
									"end": 2673,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2670,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2657,
									"end": 2674,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2650,
									"end": 2697,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2714,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2840,
									"end": 2844,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2714,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 2714,
									"end": 2845,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2714,
									"end": 2845,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2714,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2706,
									"end": 2845,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2706,
									"end": 2845,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2852,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2433,
									"end": 2852,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 347,
									"end": 2003,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c82cd7e6ef20b470c762ca25acc01f12a4e3894bb7cf8804185d165a38d9781864736f6c634300081d0033",
									".code": [
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "7DC0D1D0"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "AB879827"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "AB879827"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "C7B6084C"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "E7663079"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "7DC0D1D0"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "82D52C1E"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "8E6B409E"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "543F66A4"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "543F66A4"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "60DA3E83"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "7ADBF973"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "2262CED"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "2F48AB7D"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "490AE210"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 2003,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1367,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1367,
											"end": 1528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 275,
											"end": 294,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 275,
											"end": 294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 275,
											"end": 294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1589,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1589,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 902,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 902,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 401,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1110,
											"end": 1305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1110,
											"end": 1305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 442,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 442,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1853,
											"end": 2000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1853,
											"end": 2000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 2000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 492,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 492,
											"end": 524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 492,
											"end": 524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 507,
											"end": 535,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 507,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 507,
											"end": 535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 470,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 470,
											"end": 500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 381,
											"end": 402,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 381,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 381,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1471,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1444,
											"end": 1459,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1444,
											"end": 1471,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8F044878F4D84CCC4D80555F24F9428C1D9297C48B7C7A17E6A50263BE17EF54"
										},
										{
											"begin": 1510,
											"end": 1519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1487,
											"end": 1520,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1520,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1367,
											"end": 1528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 275,
											"end": 294,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 275,
											"end": 294,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 275,
											"end": 294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1676,
											"end": 1679,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1F4"
										},
										{
											"begin": 1666,
											"end": 1672,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1679,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1666,
											"end": 1679,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1658,
											"end": 1696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1658,
											"end": 1696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1723,
											"end": 1729,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1707,
											"end": 1729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1729,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "206DD15151FCC83315419FBE53A71FCF9C09DA803767D3DD05F7874E1B9BF645"
										},
										{
											"begin": 1763,
											"end": 1769,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1745,
											"end": 1770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1745,
											"end": 1770,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 988,
											"end": 994,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 971,
											"end": 985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 971,
											"end": 994,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5EF34F53269A04B5B817E5BE24A51BA6B477118B399EC9DD5B2BAF5B299563DC"
										},
										{
											"begin": 1025,
											"end": 1031,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1032,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1032,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 902,
											"end": 1040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 401,
											"end": 435,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1203,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1205,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1205,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 1176,
											"end": 1232,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 1176,
											"end": 1232,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1252,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1243,
											"end": 1249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1243,
											"end": 1259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3DF77BEB5DB05FCDD70A30FC8ADF3F83F9501B68579455ADBD100B8180940394"
										},
										{
											"begin": 1289,
											"end": 1296,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1275,
											"end": 1297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1297,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1110,
											"end": 1305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 442,
											"end": 463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1920,
											"end": 1924,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1955,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1955,
											"end": 1962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1955,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 1955,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1962,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1962,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1962,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1991,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1945,
											"end": 1991,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1991,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1991,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1991,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1945,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1992,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1937,
											"end": 1992,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1853,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 524,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 492,
											"end": 524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 507,
											"end": 535,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "PUSH",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 507,
											"end": 535,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 507,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 470,
											"end": 500,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 470,
											"end": 500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 381,
											"end": 402,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 381,
											"end": 402,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 381,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1583,
											"end": 1599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1528,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2253,
											"end": 2260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2303,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2271,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2271,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2309,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2219,
											"end": 2309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2400,
											"end": 2405,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2385,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2385,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2407,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2365,
											"end": 2425,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2419,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2423,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2425,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2365,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2480,
											"end": 2485,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2505,
											"end": 2525,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2525,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2558,
											"end": 2563,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2534,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2534,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2437,
											"end": 2570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2899,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2576,
											"end": 2899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2683,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2669,
											"end": 2678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2679,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2652,
											"end": 2684,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2687,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2687,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2766,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2687,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2649,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2874,
											"end": 2881,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2865,
											"end": 2871,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2872,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2832,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2832,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2822,
											"end": 2882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2822,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2899,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2899,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2576,
											"end": 2899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 3014,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2905,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3001,
											"end": 3006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2986,
											"end": 3007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2986,
											"end": 3007,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2986,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2981,
											"end": 2984,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 3008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 3014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 3014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2905,
											"end": 3014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3230,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3130,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3158,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3220,
											"end": 3221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3218,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3205,
											"end": 3222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3202,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3158,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 3158,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3158,
											"end": 3223,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3158,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3230,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3230,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3230,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3354,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3236,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3323,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3347,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3323,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3318,
											"end": 3321,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3236,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3582,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3360,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3491,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3476,
											"end": 3494,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3468,
											"end": 3494,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3572,
											"end": 3573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3557,
											"end": 3574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3548,
											"end": 3554,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3504,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3504,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3582,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3582,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3360,
											"end": 3582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3672,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3701,
											"end": 3704,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3694,
											"end": 3713,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3746,
											"end": 3750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3741,
											"end": 3744,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3737,
											"end": 3751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3751,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3925,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3763,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3917,
											"name": "PUSH",
											"source": 4,
											"value": "46656520746F6F20686967680000000000000000000000000000000000000000"
										},
										{
											"begin": 3899,
											"end": 3900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3887,
											"end": 3901,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3918,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3763,
											"end": 3925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4297,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3931,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4073,
											"end": 4076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4094,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4158,
											"end": 4160,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 4153,
											"end": 4156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4094,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4161,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4094,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4161,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4161,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4259,
											"end": 4262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4170,
											"end": 4263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4263,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 4170,
											"end": 4263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4272,
											"end": 4291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4272,
											"end": 4291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3931,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4722,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4303,
											"end": 4722,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4469,
											"end": 4473,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4496,
											"end": 4505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4492,
											"end": 4510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4556,
											"end": 4565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4550,
											"end": 4554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4566,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4542,
											"end": 4543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4540,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4527,
											"end": 4544,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4520,
											"end": 4567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4710,
											"end": 4714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4584,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4584,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4576,
											"end": 4715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4576,
											"end": 4715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4722,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4900,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 4728,
											"end": 4900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4868,
											"end": 4892,
											"name": "PUSH",
											"source": 4,
											"value": "496E76616C6964206F7261636C65206164647265737300000000000000000000"
										},
										{
											"begin": 4864,
											"end": 4865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4852,
											"end": 4866,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4845,
											"end": 4893,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4900,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 5272,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4906,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5069,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5133,
											"end": 5135,
											"name": "PUSH",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5128,
											"end": 5131,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5069,
											"end": 5136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5069,
											"end": 5136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5069,
											"end": 5136,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5069,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5136,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5136,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5145,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5145,
											"end": 5238,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 5145,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5265,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5258,
											"end": 5261,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5254,
											"end": 5266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5247,
											"end": 5266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 5272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 5272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 5272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4906,
											"end": 5272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5697,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5278,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5444,
											"end": 5448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5482,
											"end": 5484,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5471,
											"end": 5480,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5467,
											"end": 5485,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5459,
											"end": 5485,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5459,
											"end": 5485,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5531,
											"end": 5540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5521,
											"end": 5541,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5515,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5502,
											"end": 5519,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5495,
											"end": 5542,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5685,
											"end": 5689,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5559,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5690,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5559,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5278,
											"end": 5697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"ExxaAdmin.sol",
								"ExxaBaseStorage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"backendOperator()": "c7b6084c",
							"currentIndexPrice()": "8e6b409e",
							"depositFeeBps()": "ab879827",
							"depositsPaused()": "60da3e83",
							"isAuthorizedOperator(address)": "82d52c1e",
							"oracle()": "7dc0d1d0",
							"owner()": "8da5cb5b",
							"owner_()": "e7663079",
							"renounceOwnership()": "715018a6",
							"setBackendOperator(address)": "02262ced",
							"setDepositFee(uint256)": "490ae210",
							"setDepositPaused(bool)": "543f66a4",
							"setOracle(address)": "7adbf973",
							"transferOwnership(address)": "f2fde38b",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"BackendOperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeeBps\",\"type\":\"uint256\"}],\"name\":\"DepositFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"DepositsPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"OracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"backendOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentIndexPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositsPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"isAuthorizedOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setBackendOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"feeBps\",\"type\":\"uint256\"}],\"name\":\"setDepositFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setDepositPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ExxaAdmin Handles global fund settings such as pausing, oracle setup, fees, and backend operators. This is meant to be inherited or used as a base admin control layer.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExxaAdmin.sol\":\"ExxaAdmin\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe7026fe6394bd39f8bd184b928859c06793f8b31532ab3301d297998c4d052e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e249367ad0e341fa395b39e2e6ba57194fb27611f7a7dc16c67c447cdf6774c\",\"dweb:/ipfs/QmU9iz1TysJTpmfJrRQu2vFjFBKxeBC9ZmmDnaEhVpzEo9\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ExxaAdmin.sol\":{\"keccak256\":\"0x0197ad76e33d77cc434be2f8bfc20c749ba79a29bad190c02ce2a40847a54cb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://514e16701987c97e50ef9a7c38b9372a595fa52daa36b7ac78e9a6a98807a5cd\",\"dweb:/ipfs/Qmewy6t6keXs3cfQpxTvfWXnsbjBZB2iKYrftkgdQGod6i\"]},\"ExxaBaseStorage.sol\":{\"keccak256\":\"0xf61a738ff089c2c0129e7c28869069f67abd7ed6a4202500eaa44521808cf47a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab8c7b545df43105d3d1249cc26323ab7fe6eeda00a1871c655d2318d937b7f\",\"dweb:/ipfs/QmZBsMTFcSL6kaPgzGuZrbpTQPfGtT1gWFiyNjszBCKUxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 329,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "globalInvestmentId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 331,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "usdt",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 333,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "owner_",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "currentIndexPrice",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 354,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "userInvestments",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_array(t_struct(Investment)348_storage)dyn_storage)"
							},
							{
								"astId": 359,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "investmentsById",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(Investment)348_storage)"
							},
							{
								"astId": 189,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "depositsPaused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 191,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "oracle",
								"offset": 1,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 193,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "backendOperator",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 195,
								"contract": "ExxaAdmin.sol:ExxaAdmin",
								"label": "depositFeeBps",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Investment)348_storage)dyn_storage": {
								"base": "t_struct(Investment)348_storage",
								"encoding": "dynamic_array",
								"label": "struct ExxaBaseStorage.Investment[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(Investment)348_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ExxaBaseStorage.Investment[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Investment)348_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_struct(Investment)348_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ExxaBaseStorage.Investment)",
								"numberOfBytes": "32",
								"value": "t_struct(Investment)348_storage"
							},
							"t_struct(Investment)348_storage": {
								"encoding": "inplace",
								"label": "struct ExxaBaseStorage.Investment",
								"members": [
									{
										"astId": 337,
										"contract": "ExxaAdmin.sol:ExxaAdmin",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 339,
										"contract": "ExxaAdmin.sol:ExxaAdmin",
										"label": "user",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 341,
										"contract": "ExxaAdmin.sol:ExxaAdmin",
										"label": "amountUSD",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 343,
										"contract": "ExxaAdmin.sol:ExxaAdmin",
										"label": "indexAtEntry",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 345,
										"contract": "ExxaAdmin.sol:ExxaAdmin",
										"label": "timestamp",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 347,
										"contract": "ExxaAdmin.sol:ExxaAdmin",
										"label": "withdrawn",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ExxaBaseStorage.sol": {
				"ExxaBaseStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "currentIndexPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner_",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"currentIndexPrice()": "8e6b409e",
							"owner_()": "e7663079",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"currentIndexPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner_\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ExxaBaseStorage.sol\":\"ExxaBaseStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ExxaBaseStorage.sol\":{\"keccak256\":\"0xf61a738ff089c2c0129e7c28869069f67abd7ed6a4202500eaa44521808cf47a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab8c7b545df43105d3d1249cc26323ab7fe6eeda00a1871c655d2318d937b7f\",\"dweb:/ipfs/QmZBsMTFcSL6kaPgzGuZrbpTQPfGtT1gWFiyNjszBCKUxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 329,
								"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
								"label": "globalInvestmentId",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 331,
								"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
								"label": "usdt",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 333,
								"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
								"label": "owner_",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 335,
								"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
								"label": "currentIndexPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 354,
								"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
								"label": "userInvestments",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_struct(Investment)348_storage)dyn_storage)"
							},
							{
								"astId": 359,
								"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
								"label": "investmentsById",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(Investment)348_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Investment)348_storage)dyn_storage": {
								"base": "t_struct(Investment)348_storage",
								"encoding": "dynamic_array",
								"label": "struct ExxaBaseStorage.Investment[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(Investment)348_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct ExxaBaseStorage.Investment[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Investment)348_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_struct(Investment)348_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ExxaBaseStorage.Investment)",
								"numberOfBytes": "32",
								"value": "t_struct(Investment)348_storage"
							},
							"t_struct(Investment)348_storage": {
								"encoding": "inplace",
								"label": "struct ExxaBaseStorage.Investment",
								"members": [
									{
										"astId": 337,
										"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 339,
										"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
										"label": "user",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 341,
										"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
										"label": "amountUSD",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 343,
										"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
										"label": "indexAtEntry",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 345,
										"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
										"label": "timestamp",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 347,
										"contract": "ExxaBaseStorage.sol:ExxaBaseStorage",
										"label": "withdrawn",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:2999:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"ExxaAdmin.sol": {
				"ast": {
					"absolutePath": "ExxaAdmin.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"ExxaAdmin": [
							325
						],
						"ExxaBaseStorage": [
							385
						],
						"Ownable": [
							147
						]
					},
					"id": 326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".29"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 326,
							"sourceUnit": 148,
							"src": "61:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ExxaBaseStorage.sol",
							"file": "./ExxaBaseStorage.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 326,
							"sourceUnit": 386,
							"src": "115:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Ownable",
										"nameLocations": [
											"369:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "369:7:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "369:7:2"
								},
								{
									"baseName": {
										"id": 185,
										"name": "ExxaBaseStorage",
										"nameLocations": [
											"378:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 385,
										"src": "378:15:2"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "378:15:2"
								}
							],
							"canonicalName": "ExxaAdmin",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "150:195:2",
								"text": " @title ExxaAdmin\n Handles global fund settings such as pausing, oracle setup, fees, and backend operators.\n This is meant to be inherited or used as a base admin control layer."
							},
							"fullyImplemented": true,
							"id": 325,
							"linearizedBaseContracts": [
								325,
								385,
								147,
								177
							],
							"name": "ExxaAdmin",
							"nameLocation": "356:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "60da3e83",
									"id": 189,
									"mutability": "mutable",
									"name": "depositsPaused",
									"nameLocation": "413:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 325,
									"src": "401:34:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 187,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "401:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 188,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "430:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 191,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "457:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 325,
									"src": "442:21:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 190,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "442:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7b6084c",
									"id": 193,
									"mutability": "mutable",
									"name": "backendOperator",
									"nameLocation": "485:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 325,
									"src": "470:30:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 192,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "470:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ab879827",
									"id": 195,
									"mutability": "mutable",
									"name": "depositFeeBps",
									"nameLocation": "522:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 325,
									"src": "507:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 194,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "507:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5ef34f53269a04b5b817e5be24a51ba6b477118b399ec9dd5b2baf5b299563dc",
									"id": 199,
									"name": "DepositsPaused",
									"nameLocation": "550:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"indexed": false,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "570:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "565:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "565:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:13:2"
									},
									"src": "544:34:2"
								},
								{
									"anonymous": false,
									"eventSelector": "3df77beb5db05fcdd70a30fc8adf3f83f9501b68579455adbd100b8180940394",
									"id": 203,
									"name": "OracleUpdated",
									"nameLocation": "590:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOracle",
												"nameLocation": "612:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "604:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "604:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:19:2"
									},
									"src": "584:39:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8f044878f4d84ccc4d80555f24f9428c1d9297c48b7c7a17e6a50263be17ef54",
									"id": 207,
									"name": "BackendOperatorUpdated",
									"nameLocation": "635:22:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "newOperator",
												"nameLocation": "666:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "658:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "657:21:2"
									},
									"src": "629:50:2"
								},
								{
									"anonymous": false,
									"eventSelector": "206dd15151fcc83315419fbe53a71fcf9c09da803767d3dd05f7874e1b9bf645",
									"id": 211,
									"name": "DepositFeeUpdated",
									"nameLocation": "691:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFeeBps",
												"nameLocation": "717:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "709:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:19:2"
									},
									"src": "685:43:2"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "830:2:2",
										"statements": []
									},
									"id": 225,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 218,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "793:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 219,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 217,
												"name": "Ownable",
												"nameLocations": [
													"785:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "785:7:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "785:21:2"
										},
										{
											"arguments": [
												{
													"id": 221,
													"name": "_usdt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 215,
													"src": "823:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 222,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 220,
												"name": "ExxaBaseStorage",
												"nameLocations": [
													"807:15:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 385,
												"src": "807:15:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "807:22:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "756:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "748:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "778:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "770:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:37:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:0:2"
									},
									"scope": 325,
									"src": "736:96:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "960:80:2",
										"statements": [
											{
												"expression": {
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 232,
														"name": "depositsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "971:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 233,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "988:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "971:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 235,
												"nodeType": "ExpressionStatement",
												"src": "971:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 237,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "1025:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 236,
														"name": "DepositsPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "1010:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 239,
												"nodeType": "EmitStatement",
												"src": "1005:27:2"
											}
										]
									},
									"functionSelector": "543f66a4",
									"id": 241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 230,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 229,
												"name": "onlyOwner",
												"nameLocations": [
													"950:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "950:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "950:9:2"
										}
									],
									"name": "setDepositPaused",
									"nameLocation": "911:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "paused",
												"nameLocation": "933:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "928:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "928:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:13:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:0:2"
									},
									"scope": 325,
									"src": "902:138:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1165:140:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "_oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "1184:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1203:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1195:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 250,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1195:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1195:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1184:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f7261636c652061646472657373",
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1207:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3",
																"typeString": "literal_string \"Invalid oracle address\""
															},
															"value": "Invalid oracle address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3",
																"typeString": "literal_string \"Invalid oracle address\""
															}
														],
														"id": 248,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1176:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "1176:56:2"
											},
											{
												"expression": {
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 258,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "1243:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 259,
														"name": "_oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1252:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1243:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "1243:16:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 263,
															"name": "_oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 262,
														"name": "OracleUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1275:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "EmitStatement",
												"src": "1270:27:2"
											}
										]
									},
									"functionSelector": "7adbf973",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 246,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 245,
												"name": "onlyOwner",
												"nameLocations": [
													"1155:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1155:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1155:9:2"
										}
									],
									"name": "setOracle",
									"nameLocation": "1119:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "1137:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "1129:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:17:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:0:2"
									},
									"scope": 325,
									"src": "1110:195:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "1433:95:2",
										"statements": [
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 274,
														"name": "backendOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "1444:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 275,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "1462:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1444:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1444:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 279,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "1510:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 278,
														"name": "BackendOperatorUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "1487:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1487:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "EmitStatement",
												"src": "1482:38:2"
											}
										]
									},
									"functionSelector": "02262ced",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 271,
												"name": "onlyOwner",
												"nameLocations": [
													"1423:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1423:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1423:9:2"
										}
									],
									"name": "setBackendOperator",
									"nameLocation": "1376:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1403:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "1395:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1394:19:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1433:0:2"
									},
									"scope": 325,
									"src": "1367:161:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1647:131:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "feeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "1666:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "353030",
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1676:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																"value": "500"
															},
															"src": "1666:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1681:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1658:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1658:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "1658:38:2"
											},
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 297,
														"name": "depositFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1707:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 298,
														"name": "feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "1723:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1707:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "1707:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 302,
															"name": "feeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "1763:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 301,
														"name": "DepositFeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1745:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1745:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "EmitStatement",
												"src": "1740:30:2"
											}
										]
									},
									"functionSelector": "490ae210",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 287,
												"name": "onlyOwner",
												"nameLocations": [
													"1637:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1637:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1637:9:2"
										}
									],
									"name": "setDepositFee",
									"nameLocation": "1598:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "feeBps",
												"nameLocation": "1620:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1612:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:16:2"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1647:0:2"
									},
									"scope": 325,
									"src": "1589:189:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "1926:74:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 313,
																	"name": "caller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "1945:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 314,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1955:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1955:7:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1945:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 317,
																	"name": "caller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "1966:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 318,
																	"name": "backendOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 193,
																	"src": "1976:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1966:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1945:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 321,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1944:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 312,
												"id": 322,
												"nodeType": "Return",
												"src": "1937:55:2"
											}
										]
									},
									"functionSelector": "82d52c1e",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAuthorizedOperator",
									"nameLocation": "1862:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "1891:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1883:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:16:2"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "1920:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1920:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1919:6:2"
									},
									"scope": 325,
									"src": "1853:147:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 326,
							"src": "347:1656:2",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								199,
								203,
								207,
								211
							]
						}
					],
					"src": "33:1972:2"
				},
				"id": 2
			},
			"ExxaBaseStorage.sol": {
				"ast": {
					"absolutePath": "ExxaBaseStorage.sol",
					"exportedSymbols": {
						"ExxaBaseStorage": [
							385
						]
					},
					"id": 386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".29"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ExxaBaseStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 385,
							"linearizedBaseContracts": [
								385
							],
							"name": "ExxaBaseStorage",
							"nameLocation": "79:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 329,
									"mutability": "mutable",
									"name": "globalInvestmentId",
									"nameLocation": "181:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "164:35:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 328,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 331,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "290:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "275:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e7663079",
									"id": 333,
									"mutability": "mutable",
									"name": "owner_",
									"nameLocation": "396:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "381:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 332,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "381:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8e6b409e",
									"id": 335,
									"mutability": "mutable",
									"name": "currentIndexPrice",
									"nameLocation": "507:17:3",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "492:32:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 334,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "492:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ExxaBaseStorage.Investment",
									"id": 348,
									"members": [
										{
											"constant": false,
											"id": 337,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "613:2:3",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "605:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 336,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 339,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "673:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "665:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 338,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "665:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 341,
											"mutability": "mutable",
											"name": "amountUSD",
											"nameLocation": "730:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "722:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 340,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "722:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 343,
											"mutability": "mutable",
											"name": "indexAtEntry",
											"nameLocation": "792:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "784:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 342,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "784:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 345,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "862:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "854:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 344,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "854:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 347,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "922:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "917:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 346,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "917:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Investment",
									"nameLocation": "583:10:3",
									"nodeType": "StructDefinition",
									"scope": 385,
									"src": "576:418:3",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 354,
									"mutability": "mutable",
									"name": "userInvestments",
									"nameLocation": "1088:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "1046:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Investment_$348_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct ExxaBaseStorage.Investment[])"
									},
									"typeName": {
										"id": 353,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 349,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1054:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1046:32:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Investment_$348_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct ExxaBaseStorage.Investment[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 351,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 350,
													"name": "Investment",
													"nameLocations": [
														"1065:10:3"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 348,
													"src": "1065:10:3"
												},
												"referencedDeclaration": 348,
												"src": "1065:10:3",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Investment_$348_storage_ptr",
													"typeString": "struct ExxaBaseStorage.Investment"
												}
											},
											"id": 352,
											"nodeType": "ArrayTypeName",
											"src": "1065:12:3",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Investment_$348_storage_$dyn_storage_ptr",
												"typeString": "struct ExxaBaseStorage.Investment[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 359,
									"mutability": "mutable",
									"name": "investmentsById",
									"nameLocation": "1238:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 385,
									"src": "1198:55:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investment_$348_storage_$",
										"typeString": "mapping(uint256 => struct ExxaBaseStorage.Investment)"
									},
									"typeName": {
										"id": 358,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 355,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1206:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1198:30:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Investment_$348_storage_$",
											"typeString": "mapping(uint256 => struct ExxaBaseStorage.Investment)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 357,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 356,
												"name": "Investment",
												"nameLocations": [
													"1217:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 348,
												"src": "1217:10:3"
											},
											"referencedDeclaration": 348,
											"src": "1217:10:3",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Investment_$348_storage_ptr",
												"typeString": "struct ExxaBaseStorage.Investment"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "1553:124:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "_usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "1572:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1589:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1581:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 366,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1581:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1581:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1572:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420555344542061646472657373",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1593:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
																"typeString": "literal_string \"Invalid USDT address\""
															},
															"value": "Invalid USDT address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cbcb8380002cec1f29fb446625cbcc250a9f4bc2a95e0d14f00ebb357481a33f",
																"typeString": "literal_string \"Invalid USDT address\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1564:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1564:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "1564:52:3"
											},
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1627:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 375,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "1634:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1627:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "1627:12:3"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 378,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "1650:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 379,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1659:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1663:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1659:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1650:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "1650:19:3"
											}
										]
									},
									"id": 384,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "1546:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1538:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1538:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1537:15:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1553:0:3"
									},
									"scope": 385,
									"src": "1526:151:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 386,
							"src": "61:1619:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1647:3"
				},
				"id": 3
			}
		}
	}
}